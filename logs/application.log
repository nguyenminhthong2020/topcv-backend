[INFO] 2025-02-27 23:46:06 - HV000001: Hibernate Validator 8.0.2.Final
[INFO] 2025-02-27 23:46:06 - Starting JobApplication using Java 21.0.5 with PID 18960 (D:\2024\ivc\github\topcv-backend\target\classes started by ACER in D:\2024\ivc\github\topcv-backend)
[INFO] 2025-02-27 23:46:06 - No active profile set, falling back to 1 default profile: "default"
[INFO] 2025-02-27 23:46:06 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO] 2025-02-27 23:46:06 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO] 2025-02-27 23:46:07 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:46:07 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO] 2025-02-27 23:46:07 - Finished Spring Data repository scanning in 125 ms. Found 2 JPA repository interfaces.
[INFO] 2025-02-27 23:46:07 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:46:07 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-02-27 23:46:07 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:46:07 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:46:07 - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
[INFO] 2025-02-27 23:46:08 - Tomcat initialized with port 8090 (http)
[INFO] 2025-02-27 23:46:08 - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:46:08 - Starting service [Tomcat]
[INFO] 2025-02-27 23:46:08 - Starting Servlet engine: [Apache Tomcat/10.1.36]
[INFO] 2025-02-27 23:46:08 - Initializing Spring embedded WebApplicationContext
[INFO] 2025-02-27 23:46:08 - Root WebApplicationContext: initialization completed in 2721 ms
[DEBUG] 2025-02-27 23:46:09 - Filter 'webMvcObservationFilter' configured for use
[INFO] 2025-02-27 23:46:09 - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO] 2025-02-27 23:46:09 - HHH000412: Hibernate ORM core version 6.6.8.Final
[INFO] 2025-02-27 23:46:09 - HHH000026: Second-level cache disabled
[INFO] 2025-02-27 23:46:09 - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO] 2025-02-27 23:46:09 - HikariPool-1 - Starting...
[INFO] 2025-02-27 23:46:09 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@113f7dcb
[INFO] 2025-02-27 23:46:09 - HikariPool-1 - Start completed.
[INFO] 2025-02-27 23:46:09 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO] 2025-02-27 23:46:10 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO] 2025-02-27 23:46:10 - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:46:11 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[WARN] 2025-02-27 23:46:11 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[WARN] 2025-02-27 23:46:12 - One of the patterns in [/api/v1/auth/**, /swagger-ui/**, /v3/api-docs/**, /api/v1/test-no-auth/**, /storage/**, /api/v1/jobs/**, api/v1/companies/**, api/v1/email/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
[DEBUG] 2025-02-27 23:46:12 - 16 mappings in 'requestMappingHandlerMapping'
[DEBUG] 2025-02-27 23:46:12 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[INFO] 2025-02-27 23:46:12 - Exposing 1 endpoint beneath base path '/actuator'
[DEBUG] 2025-02-27 23:46:13 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG] 2025-02-27 23:46:13 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO] 2025-02-27 23:46:14 - LiveReload server is running on port 35729
[INFO] 2025-02-27 23:46:14 - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:46:14 - Tomcat started on port 8090 (http) with context path '/'
[INFO] 2025-02-27 23:46:14 - Started JobApplication in 8.867 seconds (process running for 9.272)
[INFO] 2025-02-27 23:46:15 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-02-27 23:46:15 - Initializing Servlet 'dispatcherServlet'
[DEBUG] 2025-02-27 23:46:15 - Detected StandardServletMultipartResolver
[DEBUG] 2025-02-27 23:46:15 - Detected AcceptHeaderLocaleResolver
[DEBUG] 2025-02-27 23:46:15 - Detected FixedThemeResolver
[DEBUG] 2025-02-27 23:46:15 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7a99c4df
[DEBUG] 2025-02-27 23:46:15 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@dc4363b
[DEBUG] 2025-02-27 23:46:15 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO] 2025-02-27 23:46:15 - Completed initialization in 5 ms
[DEBUG] 2025-02-27 23:46:15 - GET "/swagger-ui/index.html", parameters={}
[DEBUG] 2025-02-27 23:46:15 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:46:15 - Completed 200 OK
[DEBUG] 2025-02-27 23:46:15 - GET "/swagger-ui/index.css", parameters={}
[DEBUG] 2025-02-27 23:46:15 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:46:15 - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
[DEBUG] 2025-02-27 23:46:15 - GET "/swagger-ui/swagger-ui.css", parameters={}
[DEBUG] 2025-02-27 23:46:15 - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
[DEBUG] 2025-02-27 23:46:15 - Completed 200 OK
[DEBUG] 2025-02-27 23:46:15 - GET "/swagger-ui/swagger-initializer.js", parameters={}
[DEBUG] 2025-02-27 23:46:15 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:46:15 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:46:15 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:46:15 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:46:15 - Completed 200 OK
[DEBUG] 2025-02-27 23:46:15 - Completed 200 OK
[DEBUG] 2025-02-27 23:46:15 - Completed 200 OK
[DEBUG] 2025-02-27 23:46:15 - Completed 200 OK
[DEBUG] 2025-02-27 23:46:15 - GET "/v3/api-docs/swagger-config", parameters={}
[DEBUG] 2025-02-27 23:46:15 - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
[DEBUG] 2025-02-27 23:46:15 - Using 'application/json', given [*/*] and supported [application/json]
[DEBUG] 2025-02-27 23:46:15 - Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8090/swagger-ui/oauth2-re (truncated)...]
[DEBUG] 2025-02-27 23:46:15 - Completed 200 OK
[DEBUG] 2025-02-27 23:46:15 - GET "/v3/api-docs", parameters={}
[DEBUG] 2025-02-27 23:46:15 - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
[INFO] 2025-02-27 23:46:15 - Init duration for springdoc-openapi is: 327 ms
[DEBUG] 2025-02-27 23:46:15 - Using 'application/json', given [application/json, */*] and supported [application/json]
[DEBUG] 2025-02-27 23:46:15 - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
[DEBUG] 2025-02-27 23:46:15 - Completed 200 OK
[INFO] 2025-02-27 23:46:17 - Commencing graceful shutdown. Waiting for active requests to complete
[INFO] 2025-02-27 23:46:17 - Graceful shutdown complete
[INFO] 2025-02-27 23:46:17 - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:46:17 - HikariPool-1 - Shutdown initiated...
[INFO] 2025-02-27 23:46:17 - HikariPool-1 - Shutdown completed.
[INFO] 2025-02-27 23:46:50 - HV000001: Hibernate Validator 8.0.2.Final
[INFO] 2025-02-27 23:46:50 - Starting JobApplication using Java 21.0.5 with PID 17632 (D:\2024\ivc\github\topcv-backend\target\classes started by ACER in D:\2024\ivc\github\topcv-backend)
[INFO] 2025-02-27 23:46:50 - No active profile set, falling back to 1 default profile: "default"
[INFO] 2025-02-27 23:46:51 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO] 2025-02-27 23:46:51 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO] 2025-02-27 23:46:52 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:46:52 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO] 2025-02-27 23:46:52 - Finished Spring Data repository scanning in 119 ms. Found 2 JPA repository interfaces.
[INFO] 2025-02-27 23:46:52 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:46:52 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-02-27 23:46:52 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:46:52 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:46:52 - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
[INFO] 2025-02-27 23:46:53 - Tomcat initialized with port 8090 (http)
[INFO] 2025-02-27 23:46:53 - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:46:53 - Starting service [Tomcat]
[INFO] 2025-02-27 23:46:53 - Starting Servlet engine: [Apache Tomcat/10.1.36]
[INFO] 2025-02-27 23:46:53 - Initializing Spring embedded WebApplicationContext
[INFO] 2025-02-27 23:46:53 - Root WebApplicationContext: initialization completed in 2320 ms
[DEBUG] 2025-02-27 23:46:53 - Filter 'webMvcObservationFilter' configured for use
[INFO] 2025-02-27 23:46:53 - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO] 2025-02-27 23:46:53 - HHH000412: Hibernate ORM core version 6.6.8.Final
[INFO] 2025-02-27 23:46:53 - HHH000026: Second-level cache disabled
[INFO] 2025-02-27 23:46:54 - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO] 2025-02-27 23:46:54 - HikariPool-1 - Starting...
[INFO] 2025-02-27 23:46:54 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@e86ccc1
[INFO] 2025-02-27 23:46:54 - HikariPool-1 - Start completed.
[INFO] 2025-02-27 23:46:54 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO] 2025-02-27 23:46:55 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO] 2025-02-27 23:46:55 - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:46:55 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[WARN] 2025-02-27 23:46:56 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[WARN] 2025-02-27 23:46:56 - One of the patterns in [/api/v1/auth/**, /swagger-ui/**, /v3/api-docs/**, /api/v1/test-no-auth/**, /storage/**, /api/v1/jobs/**, api/v1/companies/**, api/v1/email/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
[DEBUG] 2025-02-27 23:46:56 - 16 mappings in 'requestMappingHandlerMapping'
[DEBUG] 2025-02-27 23:46:57 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[INFO] 2025-02-27 23:46:57 - Exposing 1 endpoint beneath base path '/actuator'
[DEBUG] 2025-02-27 23:46:57 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG] 2025-02-27 23:46:57 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO] 2025-02-27 23:46:59 - LiveReload server is running on port 35729
[INFO] 2025-02-27 23:46:59 - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:46:59 - Tomcat started on port 8090 (http) with context path '/'
[INFO] 2025-02-27 23:46:59 - Started JobApplication in 8.744 seconds (process running for 9.187)
[INFO] 2025-02-27 23:46:59 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-02-27 23:46:59 - Initializing Servlet 'dispatcherServlet'
[DEBUG] 2025-02-27 23:46:59 - Detected StandardServletMultipartResolver
[DEBUG] 2025-02-27 23:46:59 - Detected AcceptHeaderLocaleResolver
[DEBUG] 2025-02-27 23:46:59 - Detected FixedThemeResolver
[DEBUG] 2025-02-27 23:46:59 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@f906674
[DEBUG] 2025-02-27 23:46:59 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@750b6ece
[DEBUG] 2025-02-27 23:46:59 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO] 2025-02-27 23:46:59 - Completed initialization in 7 ms
[DEBUG] 2025-02-27 23:46:59 - GET "/swagger-ui/index.html", parameters={}
[DEBUG] 2025-02-27 23:46:59 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:46:59 - Completed 200 OK
[DEBUG] 2025-02-27 23:46:59 - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
[DEBUG] 2025-02-27 23:46:59 - GET "/swagger-ui/index.css", parameters={}
[DEBUG] 2025-02-27 23:46:59 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:46:59 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:46:59 - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
[DEBUG] 2025-02-27 23:46:59 - GET "/swagger-ui/swagger-initializer.js", parameters={}
[DEBUG] 2025-02-27 23:46:59 - Completed 200 OK
[DEBUG] 2025-02-27 23:46:59 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:46:59 - GET "/swagger-ui/swagger-ui.css", parameters={}
[DEBUG] 2025-02-27 23:46:59 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:46:59 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:46:59 - Completed 200 OK
[DEBUG] 2025-02-27 23:46:59 - Completed 200 OK
[DEBUG] 2025-02-27 23:46:59 - Completed 200 OK
[DEBUG] 2025-02-27 23:46:59 - Completed 200 OK
[DEBUG] 2025-02-27 23:47:00 - GET "/v3/api-docs/swagger-config", parameters={}
[DEBUG] 2025-02-27 23:47:00 - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
[DEBUG] 2025-02-27 23:47:00 - Using 'application/json', given [*/*] and supported [application/json]
[DEBUG] 2025-02-27 23:47:00 - Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8090/swagger-ui/oauth2-re (truncated)...]
[DEBUG] 2025-02-27 23:47:00 - Completed 200 OK
[DEBUG] 2025-02-27 23:47:00 - GET "/v3/api-docs", parameters={}
[DEBUG] 2025-02-27 23:47:00 - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
[INFO] 2025-02-27 23:47:00 - Init duration for springdoc-openapi is: 333 ms
[DEBUG] 2025-02-27 23:47:00 - Using 'application/json', given [application/json, */*] and supported [application/json]
[DEBUG] 2025-02-27 23:47:00 - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
[DEBUG] 2025-02-27 23:47:00 - Completed 200 OK
[DEBUG] 2025-02-27 23:47:02 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:47:02 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:47:02 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:47:02 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:47:02 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:47:02 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:47:02 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:47:02 - New user register at 2025-02-27T23:47:02.618801900: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:47:02 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:47:02 - Writing [com.example.Job.models.dtos.ResponseDto@50afe104]
[DEBUG] 2025-02-27 23:47:02 - Completed 201 CREATED
[DEBUG] 2025-02-27 23:47:04 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:47:04 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:47:04 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:47:04 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:47:04 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:47:04 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:47:04 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:47:04 - New user register at 2025-02-27T23:47:04.046388500: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:47:04 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:47:04 - Writing [com.example.Job.models.dtos.ResponseDto@42d9ba0]
[DEBUG] 2025-02-27 23:47:04 - Completed 201 CREATED
[DEBUG] 2025-02-27 23:47:04 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:47:04 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:47:04 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:47:04 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:47:04 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:47:04 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:47:04 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:47:04 - New user register at 2025-02-27T23:47:04.988460900: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:47:04 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:47:04 - Writing [com.example.Job.models.dtos.ResponseDto@9352c3d]
[DEBUG] 2025-02-27 23:47:04 - Completed 201 CREATED
[DEBUG] 2025-02-27 23:47:05 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:47:05 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:47:05 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:47:05 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:47:05 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:47:05 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:47:05 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:47:05 - New user register at 2025-02-27T23:47:05.830743800: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:47:05 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:47:05 - Writing [com.example.Job.models.dtos.ResponseDto@21b212af]
[DEBUG] 2025-02-27 23:47:05 - Completed 201 CREATED
[DEBUG] 2025-02-27 23:47:06 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:47:06 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:47:06 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:47:06 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:47:06 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:47:06 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:47:06 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:47:06 - New user register at 2025-02-27T23:47:06.688489300: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:47:06 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:47:06 - Writing [com.example.Job.models.dtos.ResponseDto@54234437]
[DEBUG] 2025-02-27 23:47:06 - Completed 201 CREATED
[DEBUG] 2025-02-27 23:47:07 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:47:07 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:47:07 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:47:07 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:47:07 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:47:07 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:47:07 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:47:07 - New user register at 2025-02-27T23:47:07.473729400: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:47:07 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:47:07 - Writing [com.example.Job.models.dtos.ResponseDto@742b1444]
[DEBUG] 2025-02-27 23:47:07 - Completed 201 CREATED
[DEBUG] 2025-02-27 23:47:08 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:47:08 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:47:08 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:47:08 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:47:08 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:47:08 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:47:08 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:47:08 - New user register at 2025-02-27T23:47:08.335179100: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:47:08 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:47:08 - Writing [com.example.Job.models.dtos.ResponseDto@5d296778]
[DEBUG] 2025-02-27 23:47:08 - Completed 201 CREATED
[DEBUG] 2025-02-27 23:47:09 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:47:09 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:47:09 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:47:09 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:47:09 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:47:09 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:47:09 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:47:09 - New user register at 2025-02-27T23:47:09.095226100: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:47:09 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:47:09 - Writing [com.example.Job.models.dtos.ResponseDto@17feb6b2]
[DEBUG] 2025-02-27 23:47:09 - Completed 201 CREATED
[DEBUG] 2025-02-27 23:47:09 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:47:09 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:47:09 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:47:09 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:47:09 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:47:09 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:47:09 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:47:09 - New user register at 2025-02-27T23:47:09.979268200: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:47:09 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:47:09 - Writing [com.example.Job.models.dtos.ResponseDto@5812257a]
[DEBUG] 2025-02-27 23:47:09 - Completed 201 CREATED
[DEBUG] 2025-02-27 23:47:10 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:47:10 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:47:10 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:47:10 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:47:10 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:47:10 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:47:10 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:47:10 - New user register at 2025-02-27T23:47:10.704371100: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:47:10 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:47:10 - Writing [com.example.Job.models.dtos.ResponseDto@4cdc74b0]
[DEBUG] 2025-02-27 23:47:10 - Completed 201 CREATED
[DEBUG] 2025-02-27 23:47:11 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:47:11 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:47:11 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:47:11 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:47:11 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:47:11 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:47:11 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:47:11 - New user register at 2025-02-27T23:47:11.725843400: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:47:11 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:47:11 - Writing [com.example.Job.models.dtos.ResponseDto@682b1195]
[DEBUG] 2025-02-27 23:47:11 - Completed 201 CREATED
[INFO] 2025-02-27 23:48:36 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[INFO] 2025-02-27 23:48:36 - Commencing graceful shutdown. Waiting for active requests to complete
[INFO] 2025-02-27 23:48:36 - Pausing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:48:36 - Graceful shutdown complete
[INFO] 2025-02-27 23:48:36 - Stopping ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:48:36 - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:48:36 - HikariPool-1 - Shutdown initiated...
[INFO] 2025-02-27 23:48:36 - HikariPool-1 - Shutdown completed.
[INFO] 2025-02-27 23:48:36 - Starting JobApplication using Java 21.0.5 with PID 17632 (D:\2024\ivc\github\topcv-backend\target\classes started by ACER in D:\2024\ivc\github\topcv-backend)
[INFO] 2025-02-27 23:48:36 - No active profile set, falling back to 1 default profile: "default"
[INFO] 2025-02-27 23:48:36 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:48:36 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO] 2025-02-27 23:48:36 - Finished Spring Data repository scanning in 9 ms. Found 2 JPA repository interfaces.
[INFO] 2025-02-27 23:48:36 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:48:36 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-02-27 23:48:36 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:48:36 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:48:36 - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
[INFO] 2025-02-27 23:48:37 - Tomcat initialized with port 8090 (http)
[INFO] 2025-02-27 23:48:37 - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:48:37 - Starting service [Tomcat]
[INFO] 2025-02-27 23:48:37 - Starting Servlet engine: [Apache Tomcat/10.1.36]
[INFO] 2025-02-27 23:48:37 - Initializing Spring embedded WebApplicationContext
[INFO] 2025-02-27 23:48:37 - Root WebApplicationContext: initialization completed in 678 ms
[DEBUG] 2025-02-27 23:48:37 - Filter 'webMvcObservationFilter' configured for use
[INFO] 2025-02-27 23:48:37 - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO] 2025-02-27 23:48:37 - HHH000026: Second-level cache disabled
[INFO] 2025-02-27 23:48:37 - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO] 2025-02-27 23:48:37 - HikariPool-2 - Starting...
[INFO] 2025-02-27 23:48:37 - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@9c45b52
[INFO] 2025-02-27 23:48:37 - HikariPool-2 - Start completed.
[INFO] 2025-02-27 23:48:37 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO] 2025-02-27 23:48:37 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO] 2025-02-27 23:48:37 - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:48:37 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[WARN] 2025-02-27 23:48:38 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[WARN] 2025-02-27 23:48:38 - One of the patterns in [/api/v1/auth/**, /swagger-ui/**, /v3/api-docs/**, /api/v1/test-no-auth/**, /storage/**, /api/v1/jobs/**, api/v1/companies/**, api/v1/email/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
[DEBUG] 2025-02-27 23:48:38 - 16 mappings in 'requestMappingHandlerMapping'
[DEBUG] 2025-02-27 23:48:38 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[INFO] 2025-02-27 23:48:38 - Exposing 1 endpoint beneath base path '/actuator'
[DEBUG] 2025-02-27 23:48:39 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG] 2025-02-27 23:48:39 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO] 2025-02-27 23:48:40 - LiveReload server is running on port 35729
[INFO] 2025-02-27 23:48:40 - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:48:40 - Tomcat started on port 8090 (http) with context path '/'
[INFO] 2025-02-27 23:48:40 - Started JobApplication in 4.082 seconds (process running for 110.337)
[INFO] 2025-02-27 23:48:40 - Condition evaluation unchanged
[INFO] 2025-02-27 23:48:40 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-02-27 23:48:40 - Initializing Servlet 'dispatcherServlet'
[DEBUG] 2025-02-27 23:48:40 - Detected StandardServletMultipartResolver
[DEBUG] 2025-02-27 23:48:40 - Detected AcceptHeaderLocaleResolver
[DEBUG] 2025-02-27 23:48:40 - Detected FixedThemeResolver
[DEBUG] 2025-02-27 23:48:40 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1bc388d4
[DEBUG] 2025-02-27 23:48:40 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@189eda3d
[DEBUG] 2025-02-27 23:48:40 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO] 2025-02-27 23:48:40 - Completed initialization in 7 ms
[DEBUG] 2025-02-27 23:48:40 - GET "/swagger-ui/index.html", parameters={}
[DEBUG] 2025-02-27 23:48:40 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:48:40 - Completed 200 OK
[DEBUG] 2025-02-27 23:48:40 - GET "/swagger-ui/index.css", parameters={}
[DEBUG] 2025-02-27 23:48:40 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:48:40 - Completed 200 OK
[DEBUG] 2025-02-27 23:48:40 - GET "/swagger-ui/swagger-initializer.js", parameters={}
[DEBUG] 2025-02-27 23:48:40 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:48:40 - GET "/swagger-ui/swagger-ui.css", parameters={}
[DEBUG] 2025-02-27 23:48:40 - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
[DEBUG] 2025-02-27 23:48:40 - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
[DEBUG] 2025-02-27 23:48:40 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:48:40 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:48:40 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:48:40 - Completed 200 OK
[DEBUG] 2025-02-27 23:48:40 - Completed 200 OK
[DEBUG] 2025-02-27 23:48:40 - Completed 200 OK
[DEBUG] 2025-02-27 23:48:40 - Completed 200 OK
[DEBUG] 2025-02-27 23:48:41 - GET "/v3/api-docs/swagger-config", parameters={}
[DEBUG] 2025-02-27 23:48:41 - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
[DEBUG] 2025-02-27 23:48:41 - Using 'application/json', given [*/*] and supported [application/json]
[DEBUG] 2025-02-27 23:48:41 - Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8090/swagger-ui/oauth2-re (truncated)...]
[DEBUG] 2025-02-27 23:48:41 - Completed 200 OK
[DEBUG] 2025-02-27 23:48:41 - GET "/v3/api-docs", parameters={}
[DEBUG] 2025-02-27 23:48:41 - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
[INFO] 2025-02-27 23:48:41 - Init duration for springdoc-openapi is: 168 ms
[DEBUG] 2025-02-27 23:48:41 - Using 'application/json', given [application/json, */*] and supported [application/json]
[DEBUG] 2025-02-27 23:48:41 - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
[DEBUG] 2025-02-27 23:48:41 - Completed 200 OK
[DEBUG] 2025-02-27 23:48:44 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:48:44 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:48:44 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:48:44 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:48:44 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:48:44 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:48:44 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:48:44 - New user register at 2025-02-27T23:48:44.023037200: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:48:44 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:48:44 - Writing [com.example.Job.models.dtos.ResponseDto@7f724e6a]
[DEBUG] 2025-02-27 23:48:44 - Completed 201 CREATED
[DEBUG] 2025-02-27 23:48:44 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:48:44 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:48:44 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:48:44 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:48:44 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:48:44 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:48:44 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:48:44 - New user register at 2025-02-27T23:48:44.940211: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:48:44 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:48:44 - Writing [com.example.Job.models.dtos.ResponseDto@765721b1]
[DEBUG] 2025-02-27 23:48:44 - Completed 201 CREATED
[DEBUG] 2025-02-27 23:48:45 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:48:45 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:48:45 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:48:45 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:48:45 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:48:45 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:48:45 - binding parameter (2:INTEGER) <- [1]
[INFO] 2025-02-27 23:48:45 - New user register at 2025-02-27T23:48:45.762115500: 
{"name":"thongd","email":"thongd3@gmail.com","password":"123456","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:48:45 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:48:45 - Writing [com.example.Job.models.dtos.ResponseDto@58f1a88]
[DEBUG] 2025-02-27 23:48:45 - Completed 201 CREATED
[INFO] 2025-02-27 23:49:32 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[INFO] 2025-02-27 23:49:32 - Commencing graceful shutdown. Waiting for active requests to complete
[INFO] 2025-02-27 23:49:32 - Pausing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:49:32 - Graceful shutdown complete
[INFO] 2025-02-27 23:49:32 - Stopping ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:49:32 - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:49:32 - HikariPool-2 - Shutdown initiated...
[INFO] 2025-02-27 23:49:32 - HikariPool-2 - Shutdown completed.
[INFO] 2025-02-27 23:49:32 - Starting JobApplication using Java 21.0.5 with PID 17632 (D:\2024\ivc\github\topcv-backend\target\classes started by ACER in D:\2024\ivc\github\topcv-backend)
[INFO] 2025-02-27 23:49:32 - No active profile set, falling back to 1 default profile: "default"
[INFO] 2025-02-27 23:49:33 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:49:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO] 2025-02-27 23:49:33 - Finished Spring Data repository scanning in 8 ms. Found 2 JPA repository interfaces.
[INFO] 2025-02-27 23:49:33 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:49:33 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-02-27 23:49:33 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:49:33 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:49:33 - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
[INFO] 2025-02-27 23:49:33 - Tomcat initialized with port 8090 (http)
[INFO] 2025-02-27 23:49:33 - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:49:33 - Starting service [Tomcat]
[INFO] 2025-02-27 23:49:33 - Starting Servlet engine: [Apache Tomcat/10.1.36]
[INFO] 2025-02-27 23:49:33 - Initializing Spring embedded WebApplicationContext
[INFO] 2025-02-27 23:49:33 - Root WebApplicationContext: initialization completed in 799 ms
[DEBUG] 2025-02-27 23:49:33 - Filter 'webMvcObservationFilter' configured for use
[INFO] 2025-02-27 23:49:33 - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO] 2025-02-27 23:49:33 - HHH000026: Second-level cache disabled
[INFO] 2025-02-27 23:49:33 - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO] 2025-02-27 23:49:33 - HikariPool-3 - Starting...
[INFO] 2025-02-27 23:49:33 - HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@3396a6a5
[INFO] 2025-02-27 23:49:33 - HikariPool-3 - Start completed.
[INFO] 2025-02-27 23:49:33 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO] 2025-02-27 23:49:34 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO] 2025-02-27 23:49:34 - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:49:34 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[WARN] 2025-02-27 23:49:34 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[WARN] 2025-02-27 23:49:34 - One of the patterns in [/api/v1/auth/**, /swagger-ui/**, /v3/api-docs/**, /api/v1/test-no-auth/**, /storage/**, /api/v1/jobs/**, api/v1/companies/**, api/v1/email/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
[DEBUG] 2025-02-27 23:49:35 - 16 mappings in 'requestMappingHandlerMapping'
[DEBUG] 2025-02-27 23:49:35 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[INFO] 2025-02-27 23:49:35 - Exposing 1 endpoint beneath base path '/actuator'
[DEBUG] 2025-02-27 23:49:35 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG] 2025-02-27 23:49:36 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO] 2025-02-27 23:49:37 - LiveReload server is running on port 35729
[INFO] 2025-02-27 23:49:37 - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:49:37 - Tomcat started on port 8090 (http) with context path '/'
[INFO] 2025-02-27 23:49:37 - Started JobApplication in 4.389 seconds (process running for 167.035)
[INFO] 2025-02-27 23:49:37 - Condition evaluation unchanged
[INFO] 2025-02-27 23:49:37 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-02-27 23:49:37 - Initializing Servlet 'dispatcherServlet'
[DEBUG] 2025-02-27 23:49:37 - Detected StandardServletMultipartResolver
[DEBUG] 2025-02-27 23:49:37 - Detected AcceptHeaderLocaleResolver
[DEBUG] 2025-02-27 23:49:37 - Detected FixedThemeResolver
[DEBUG] 2025-02-27 23:49:37 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@13d62b2a
[DEBUG] 2025-02-27 23:49:37 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6a0a9d9f
[DEBUG] 2025-02-27 23:49:37 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO] 2025-02-27 23:49:37 - Completed initialization in 14 ms
[DEBUG] 2025-02-27 23:49:37 - GET "/swagger-ui/index.html", parameters={}
[DEBUG] 2025-02-27 23:49:37 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:49:37 - Completed 200 OK
[DEBUG] 2025-02-27 23:49:37 - GET "/swagger-ui/swagger-ui.css", parameters={}
[DEBUG] 2025-02-27 23:49:37 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:49:37 - Completed 200 OK
[DEBUG] 2025-02-27 23:49:37 - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
[DEBUG] 2025-02-27 23:49:37 - GET "/swagger-ui/index.css", parameters={}
[DEBUG] 2025-02-27 23:49:37 - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
[DEBUG] 2025-02-27 23:49:37 - GET "/swagger-ui/swagger-initializer.js", parameters={}
[DEBUG] 2025-02-27 23:49:37 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:49:37 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:49:37 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:49:37 - Completed 200 OK
[DEBUG] 2025-02-27 23:49:37 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:49:37 - Completed 200 OK
[DEBUG] 2025-02-27 23:49:37 - Completed 200 OK
[DEBUG] 2025-02-27 23:49:37 - Completed 200 OK
[DEBUG] 2025-02-27 23:49:37 - GET "/v3/api-docs/swagger-config", parameters={}
[DEBUG] 2025-02-27 23:49:37 - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
[DEBUG] 2025-02-27 23:49:37 - Using 'application/json', given [*/*] and supported [application/json]
[DEBUG] 2025-02-27 23:49:37 - Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8090/swagger-ui/oauth2-re (truncated)...]
[DEBUG] 2025-02-27 23:49:37 - Completed 200 OK
[DEBUG] 2025-02-27 23:49:37 - GET "/v3/api-docs", parameters={}
[DEBUG] 2025-02-27 23:49:37 - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
[INFO] 2025-02-27 23:49:38 - Init duration for springdoc-openapi is: 160 ms
[DEBUG] 2025-02-27 23:49:38 - Using 'application/json', given [application/json, */*] and supported [application/json]
[DEBUG] 2025-02-27 23:49:38 - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
[DEBUG] 2025-02-27 23:49:38 - Completed 200 OK
[INFO] 2025-02-27 23:49:55 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[INFO] 2025-02-27 23:49:55 - Commencing graceful shutdown. Waiting for active requests to complete
[INFO] 2025-02-27 23:49:55 - Pausing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:49:55 - Graceful shutdown complete
[INFO] 2025-02-27 23:49:55 - Stopping ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:49:55 - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:49:55 - HikariPool-3 - Shutdown initiated...
[INFO] 2025-02-27 23:49:55 - HikariPool-3 - Shutdown completed.
[INFO] 2025-02-27 23:49:55 - Starting JobApplication using Java 21.0.5 with PID 17632 (D:\2024\ivc\github\topcv-backend\target\classes started by ACER in D:\2024\ivc\github\topcv-backend)
[INFO] 2025-02-27 23:49:55 - No active profile set, falling back to 1 default profile: "default"
[INFO] 2025-02-27 23:49:56 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:49:56 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO] 2025-02-27 23:49:56 - Finished Spring Data repository scanning in 7 ms. Found 2 JPA repository interfaces.
[INFO] 2025-02-27 23:49:56 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:49:56 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-02-27 23:49:56 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:49:56 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:49:56 - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
[INFO] 2025-02-27 23:49:56 - Tomcat initialized with port 8090 (http)
[INFO] 2025-02-27 23:49:56 - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:49:56 - Starting service [Tomcat]
[INFO] 2025-02-27 23:49:56 - Starting Servlet engine: [Apache Tomcat/10.1.36]
[INFO] 2025-02-27 23:49:56 - Initializing Spring embedded WebApplicationContext
[INFO] 2025-02-27 23:49:56 - Root WebApplicationContext: initialization completed in 656 ms
[DEBUG] 2025-02-27 23:49:56 - Filter 'webMvcObservationFilter' configured for use
[INFO] 2025-02-27 23:49:56 - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO] 2025-02-27 23:49:56 - HHH000026: Second-level cache disabled
[INFO] 2025-02-27 23:49:56 - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO] 2025-02-27 23:49:56 - HikariPool-4 - Starting...
[INFO] 2025-02-27 23:49:56 - HikariPool-4 - Added connection org.postgresql.jdbc.PgConnection@24a904ca
[INFO] 2025-02-27 23:49:56 - HikariPool-4 - Start completed.
[INFO] 2025-02-27 23:49:57 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO] 2025-02-27 23:49:57 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO] 2025-02-27 23:49:57 - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:49:57 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[WARN] 2025-02-27 23:49:57 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[WARN] 2025-02-27 23:49:57 - One of the patterns in [/api/v1/auth/**, /swagger-ui/**, /v3/api-docs/**, /api/v1/test-no-auth/**, /storage/**, /api/v1/jobs/**, api/v1/companies/**, api/v1/email/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
[DEBUG] 2025-02-27 23:49:57 - 16 mappings in 'requestMappingHandlerMapping'
[DEBUG] 2025-02-27 23:49:58 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[INFO] 2025-02-27 23:49:58 - Exposing 1 endpoint beneath base path '/actuator'
[DEBUG] 2025-02-27 23:49:58 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG] 2025-02-27 23:49:58 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO] 2025-02-27 23:49:59 - LiveReload server is running on port 35729
[INFO] 2025-02-27 23:49:59 - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:49:59 - Tomcat started on port 8090 (http) with context path '/'
[INFO] 2025-02-27 23:49:59 - Started JobApplication in 3.883 seconds (process running for 189.73)
[INFO] 2025-02-27 23:49:59 - Condition evaluation unchanged
[INFO] 2025-02-27 23:50:00 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-02-27 23:50:00 - Initializing Servlet 'dispatcherServlet'
[DEBUG] 2025-02-27 23:50:00 - Detected StandardServletMultipartResolver
[DEBUG] 2025-02-27 23:50:00 - Detected AcceptHeaderLocaleResolver
[DEBUG] 2025-02-27 23:50:00 - Detected FixedThemeResolver
[DEBUG] 2025-02-27 23:50:00 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5f898a1e
[DEBUG] 2025-02-27 23:50:00 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@231b95bc
[DEBUG] 2025-02-27 23:50:00 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO] 2025-02-27 23:50:00 - Completed initialization in 5 ms
[DEBUG] 2025-02-27 23:50:00 - GET "/swagger-ui/index.html", parameters={}
[DEBUG] 2025-02-27 23:50:00 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:00 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:00 - GET "/swagger-ui/index.css", parameters={}
[DEBUG] 2025-02-27 23:50:00 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:00 - GET "/swagger-ui/swagger-ui.css", parameters={}
[DEBUG] 2025-02-27 23:50:00 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:00 - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
[DEBUG] 2025-02-27 23:50:00 - GET "/swagger-ui/swagger-initializer.js", parameters={}
[DEBUG] 2025-02-27 23:50:00 - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
[DEBUG] 2025-02-27 23:50:00 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:00 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:00 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:00 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:00 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:00 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:00 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:00 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:00 - GET "/v3/api-docs/swagger-config", parameters={}
[DEBUG] 2025-02-27 23:50:00 - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
[DEBUG] 2025-02-27 23:50:00 - Using 'application/json', given [*/*] and supported [application/json]
[DEBUG] 2025-02-27 23:50:00 - Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8090/swagger-ui/oauth2-re (truncated)...]
[DEBUG] 2025-02-27 23:50:00 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:00 - GET "/v3/api-docs", parameters={}
[DEBUG] 2025-02-27 23:50:00 - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
[INFO] 2025-02-27 23:50:00 - Init duration for springdoc-openapi is: 117 ms
[DEBUG] 2025-02-27 23:50:00 - Using 'application/json', given [application/json, */*] and supported [application/json]
[DEBUG] 2025-02-27 23:50:00 - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
[DEBUG] 2025-02-27 23:50:00 - Completed 200 OK
[INFO] 2025-02-27 23:50:21 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[INFO] 2025-02-27 23:50:21 - Commencing graceful shutdown. Waiting for active requests to complete
[INFO] 2025-02-27 23:50:21 - Pausing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:50:21 - Graceful shutdown complete
[INFO] 2025-02-27 23:50:21 - Stopping ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:50:21 - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:50:21 - HikariPool-4 - Shutdown initiated...
[INFO] 2025-02-27 23:50:21 - HikariPool-4 - Shutdown completed.
[INFO] 2025-02-27 23:50:21 - Starting JobApplication using Java 21.0.5 with PID 17632 (D:\2024\ivc\github\topcv-backend\target\classes started by ACER in D:\2024\ivc\github\topcv-backend)
[INFO] 2025-02-27 23:50:21 - No active profile set, falling back to 1 default profile: "default"
[INFO] 2025-02-27 23:50:21 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:50:21 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO] 2025-02-27 23:50:21 - Finished Spring Data repository scanning in 7 ms. Found 2 JPA repository interfaces.
[INFO] 2025-02-27 23:50:21 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:50:21 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-02-27 23:50:21 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:50:21 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:50:21 - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
[INFO] 2025-02-27 23:50:22 - Tomcat initialized with port 8090 (http)
[INFO] 2025-02-27 23:50:22 - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:50:22 - Starting service [Tomcat]
[INFO] 2025-02-27 23:50:22 - Starting Servlet engine: [Apache Tomcat/10.1.36]
[INFO] 2025-02-27 23:50:22 - Initializing Spring embedded WebApplicationContext
[INFO] 2025-02-27 23:50:22 - Root WebApplicationContext: initialization completed in 643 ms
[DEBUG] 2025-02-27 23:50:22 - Filter 'webMvcObservationFilter' configured for use
[INFO] 2025-02-27 23:50:22 - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO] 2025-02-27 23:50:22 - HHH000026: Second-level cache disabled
[INFO] 2025-02-27 23:50:22 - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO] 2025-02-27 23:50:22 - HikariPool-5 - Starting...
[INFO] 2025-02-27 23:50:22 - HikariPool-5 - Added connection org.postgresql.jdbc.PgConnection@72b8a824
[INFO] 2025-02-27 23:50:22 - HikariPool-5 - Start completed.
[INFO] 2025-02-27 23:50:22 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-5)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO] 2025-02-27 23:50:22 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO] 2025-02-27 23:50:22 - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:50:23 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[WARN] 2025-02-27 23:50:23 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[WARN] 2025-02-27 23:50:23 - One of the patterns in [/api/v1/auth/**, /swagger-ui/**, /v3/api-docs/**, /api/v1/test-no-auth/**, /storage/**, /api/v1/jobs/**, api/v1/companies/**, api/v1/email/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
[DEBUG] 2025-02-27 23:50:23 - 16 mappings in 'requestMappingHandlerMapping'
[DEBUG] 2025-02-27 23:50:23 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[INFO] 2025-02-27 23:50:24 - Exposing 1 endpoint beneath base path '/actuator'
[DEBUG] 2025-02-27 23:50:24 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG] 2025-02-27 23:50:24 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO] 2025-02-27 23:50:25 - LiveReload server is running on port 35729
[INFO] 2025-02-27 23:50:25 - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:50:25 - Tomcat started on port 8090 (http) with context path '/'
[INFO] 2025-02-27 23:50:25 - Started JobApplication in 4.078 seconds (process running for 215.554)
[INFO] 2025-02-27 23:50:25 - Condition evaluation unchanged
[INFO] 2025-02-27 23:50:25 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-02-27 23:50:25 - Initializing Servlet 'dispatcherServlet'
[DEBUG] 2025-02-27 23:50:25 - Detected StandardServletMultipartResolver
[DEBUG] 2025-02-27 23:50:25 - Detected AcceptHeaderLocaleResolver
[DEBUG] 2025-02-27 23:50:25 - Detected FixedThemeResolver
[DEBUG] 2025-02-27 23:50:25 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@b1d89c9
[DEBUG] 2025-02-27 23:50:25 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@11bc6efc
[DEBUG] 2025-02-27 23:50:25 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO] 2025-02-27 23:50:25 - Completed initialization in 9 ms
[DEBUG] 2025-02-27 23:50:25 - GET "/swagger-ui/index.html", parameters={}
[DEBUG] 2025-02-27 23:50:25 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:25 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:26 - GET "/swagger-ui/swagger-ui.css", parameters={}
[DEBUG] 2025-02-27 23:50:26 - GET "/swagger-ui/index.css", parameters={}
[DEBUG] 2025-02-27 23:50:26 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:26 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:26 - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
[DEBUG] 2025-02-27 23:50:26 - GET "/swagger-ui/swagger-initializer.js", parameters={}
[DEBUG] 2025-02-27 23:50:26 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:26 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:26 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:26 - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
[DEBUG] 2025-02-27 23:50:26 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:26 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:26 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:26 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:26 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:26 - GET "/v3/api-docs/swagger-config", parameters={}
[DEBUG] 2025-02-27 23:50:26 - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
[DEBUG] 2025-02-27 23:50:26 - Using 'application/json', given [*/*] and supported [application/json]
[DEBUG] 2025-02-27 23:50:26 - Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8090/swagger-ui/oauth2-re (truncated)...]
[DEBUG] 2025-02-27 23:50:26 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:26 - GET "/v3/api-docs", parameters={}
[DEBUG] 2025-02-27 23:50:26 - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
[INFO] 2025-02-27 23:50:26 - Init duration for springdoc-openapi is: 116 ms
[DEBUG] 2025-02-27 23:50:26 - Using 'application/json', given [application/json, */*] and supported [application/json]
[DEBUG] 2025-02-27 23:50:26 - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
[DEBUG] 2025-02-27 23:50:26 - Completed 200 OK
[INFO] 2025-02-27 23:50:27 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[INFO] 2025-02-27 23:50:27 - Commencing graceful shutdown. Waiting for active requests to complete
[INFO] 2025-02-27 23:50:27 - Pausing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:50:27 - Graceful shutdown complete
[INFO] 2025-02-27 23:50:27 - Stopping ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:50:27 - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:50:27 - HikariPool-5 - Shutdown initiated...
[INFO] 2025-02-27 23:50:27 - HikariPool-5 - Shutdown completed.
[INFO] 2025-02-27 23:50:27 - Starting JobApplication using Java 21.0.5 with PID 17632 (D:\2024\ivc\github\topcv-backend\target\classes started by ACER in D:\2024\ivc\github\topcv-backend)
[INFO] 2025-02-27 23:50:27 - No active profile set, falling back to 1 default profile: "default"
[INFO] 2025-02-27 23:50:27 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:50:27 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO] 2025-02-27 23:50:27 - Finished Spring Data repository scanning in 8 ms. Found 2 JPA repository interfaces.
[INFO] 2025-02-27 23:50:27 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:50:27 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-02-27 23:50:27 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:50:27 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:50:27 - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
[INFO] 2025-02-27 23:50:27 - Tomcat initialized with port 8090 (http)
[INFO] 2025-02-27 23:50:27 - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:50:27 - Starting service [Tomcat]
[INFO] 2025-02-27 23:50:27 - Starting Servlet engine: [Apache Tomcat/10.1.36]
[INFO] 2025-02-27 23:50:27 - Initializing Spring embedded WebApplicationContext
[INFO] 2025-02-27 23:50:27 - Root WebApplicationContext: initialization completed in 735 ms
[DEBUG] 2025-02-27 23:50:28 - Filter 'webMvcObservationFilter' configured for use
[INFO] 2025-02-27 23:50:28 - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO] 2025-02-27 23:50:28 - HHH000026: Second-level cache disabled
[INFO] 2025-02-27 23:50:28 - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO] 2025-02-27 23:50:28 - HikariPool-6 - Starting...
[INFO] 2025-02-27 23:50:28 - HikariPool-6 - Added connection org.postgresql.jdbc.PgConnection@cf00f67
[INFO] 2025-02-27 23:50:28 - HikariPool-6 - Start completed.
[INFO] 2025-02-27 23:50:28 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-6)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO] 2025-02-27 23:50:28 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO] 2025-02-27 23:50:28 - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:50:28 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[WARN] 2025-02-27 23:50:29 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[WARN] 2025-02-27 23:50:29 - One of the patterns in [/api/v1/auth/**, /swagger-ui/**, /v3/api-docs/**, /api/v1/test-no-auth/**, /storage/**, /api/v1/jobs/**, api/v1/companies/**, api/v1/email/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
[DEBUG] 2025-02-27 23:50:29 - 16 mappings in 'requestMappingHandlerMapping'
[DEBUG] 2025-02-27 23:50:29 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[INFO] 2025-02-27 23:50:29 - Exposing 1 endpoint beneath base path '/actuator'
[DEBUG] 2025-02-27 23:50:30 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG] 2025-02-27 23:50:30 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO] 2025-02-27 23:50:31 - LiveReload server is running on port 35729
[INFO] 2025-02-27 23:50:31 - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:50:31 - Tomcat started on port 8090 (http) with context path '/'
[INFO] 2025-02-27 23:50:31 - Started JobApplication in 4.278 seconds (process running for 221.287)
[INFO] 2025-02-27 23:50:31 - Condition evaluation unchanged
[INFO] 2025-02-27 23:50:31 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-02-27 23:50:31 - Initializing Servlet 'dispatcherServlet'
[DEBUG] 2025-02-27 23:50:31 - Detected StandardServletMultipartResolver
[DEBUG] 2025-02-27 23:50:31 - Detected AcceptHeaderLocaleResolver
[DEBUG] 2025-02-27 23:50:31 - Detected FixedThemeResolver
[DEBUG] 2025-02-27 23:50:31 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6f32392f
[DEBUG] 2025-02-27 23:50:31 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7d5103fd
[DEBUG] 2025-02-27 23:50:31 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO] 2025-02-27 23:50:31 - Completed initialization in 5 ms
[DEBUG] 2025-02-27 23:50:31 - GET "/swagger-ui/index.html", parameters={}
[DEBUG] 2025-02-27 23:50:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:31 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:31 - GET "/swagger-ui/swagger-ui.css", parameters={}
[DEBUG] 2025-02-27 23:50:31 - GET "/swagger-ui/index.css", parameters={}
[DEBUG] 2025-02-27 23:50:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:31 - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
[DEBUG] 2025-02-27 23:50:31 - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
[DEBUG] 2025-02-27 23:50:31 - GET "/swagger-ui/swagger-initializer.js", parameters={}
[DEBUG] 2025-02-27 23:50:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:31 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:31 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:31 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:50:31 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:31 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:32 - GET "/v3/api-docs/swagger-config", parameters={}
[DEBUG] 2025-02-27 23:50:32 - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
[DEBUG] 2025-02-27 23:50:32 - Using 'application/json', given [*/*] and supported [application/json]
[DEBUG] 2025-02-27 23:50:32 - Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8090/swagger-ui/oauth2-re (truncated)...]
[DEBUG] 2025-02-27 23:50:32 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:32 - GET "/v3/api-docs", parameters={}
[DEBUG] 2025-02-27 23:50:32 - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
[INFO] 2025-02-27 23:50:32 - Init duration for springdoc-openapi is: 137 ms
[DEBUG] 2025-02-27 23:50:32 - Using 'application/json', given [application/json, */*] and supported [application/json]
[DEBUG] 2025-02-27 23:50:32 - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
[DEBUG] 2025-02-27 23:50:32 - Completed 200 OK
[DEBUG] 2025-02-27 23:50:33 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:50:33 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:50:33 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:50:33 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:50:33 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:50:33 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:50:33 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:50:33 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:50:33 - Writing [com.example.Job.models.dtos.ResponseDto@71bc5c6f]
[DEBUG] 2025-02-27 23:50:33 - Completed 400 BAD_REQUEST
[DEBUG] 2025-02-27 23:50:34 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:50:34 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:50:34 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:50:34 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:50:34 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:50:34 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:50:34 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:50:34 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:50:34 - Writing [com.example.Job.models.dtos.ResponseDto@4e165571]
[DEBUG] 2025-02-27 23:50:34 - Completed 400 BAD_REQUEST
[DEBUG] 2025-02-27 23:50:35 - POST "/api/v1/auth/register", parameters={}
[DEBUG] 2025-02-27 23:50:35 - Mapped to com.example.Job.controller.AuthController#register(RegisterDto)
[DEBUG] 2025-02-27 23:50:35 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:50:35 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: register, [URL]: /api/v1/auth/register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:50:35 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:50:35 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:50:35 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:50:35 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:50:35 - Writing [com.example.Job.models.dtos.ResponseDto@563c864d]
[DEBUG] 2025-02-27 23:50:35 - Completed 400 BAD_REQUEST
[DEBUG] 2025-02-27 23:50:46 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:50:46 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:50:46 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT  (truncated)...]
[INFO] 2025-02-27 23:50:46 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=123456, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[ERROR] 2025-02-27 23:50:46 - Registration error
java.lang.Exception: javax.crypto.IllegalBlockSizeException: Input length must be multiple of 16 when decrypting with padded cipher
	at com.example.Job.controller.AuthController.secureRegister(AuthController.java:171)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at io.github.resilience4j.ratelimiter.RateLimiter.lambda$decorateCheckedSupplier$3(RateLimiter.java:219)
	at io.github.resilience4j.ratelimiter.RateLimiter.executeCheckedSupplier(RateLimiter.java:772)
	at io.github.resilience4j.ratelimiter.RateLimiter.executeCheckedSupplier(RateLimiter.java:758)
	at io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterAspect.handleJoinPoint(RateLimiterAspect.java:170)
	at io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterAspect.proceed(RateLimiterAspect.java:133)
	at io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterAspect.lambda$rateLimiterAroundAdvice$0(RateLimiterAspect.java:115)
	at io.github.resilience4j.spring6.fallback.DefaultFallbackDecorator.lambda$decorate$0(DefaultFallbackDecorator.java:36)
	at io.github.resilience4j.spring6.fallback.FallbackExecutor.execute(FallbackExecutor.java:39)
	at io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterAspect.rateLimiterAroundAdvice(RateLimiterAspect.java:116)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:642)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:632)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.Job.controller.AuthController$$SpringCGLIB$$0.secureRegister(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter.doFilterInternal(BearerTokenAuthenticationFilter.java:128)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
[DEBUG] 2025-02-27 23:50:46 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:50:46 - Writing [com.example.Job.models.ResultObject@67e35871]
[DEBUG] 2025-02-27 23:50:46 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:16 - POST "/api/v1/test-no-auth/generate-encrypt-text", parameters={}
[DEBUG] 2025-02-27 23:51:16 - Mapped to com.example.Job.controller.TestNoAuthController#generateEncryptText(EncryptRequest)
[DEBUG] 2025-02-27 23:51:16 - Read "application/json;charset=UTF-8" to [com.example.Job.models.dtos.Test.EncryptRequest@ae95504]
[DEBUG] 2025-02-27 23:51:16 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:16 - Writing [com.example.Job.models.dtos.Test.EncryptResponse@28dade09]
[DEBUG] 2025-02-27 23:51:16 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:29 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:29 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:29 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:29 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:29 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:29 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:51:29 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:29 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:29 - Writing [com.example.Job.models.ResultObject@489be16f]
[DEBUG] 2025-02-27 23:51:29 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:31 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:31 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:31 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd3@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:31 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd3@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:31 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:31 - binding parameter (1:VARCHAR) <- [thongd3@gmail.com]
[TRACE] 2025-02-27 23:51:31 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:31 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:31 - Writing [com.example.Job.models.ResultObject@72a61bf6]
[DEBUG] 2025-02-27 23:51:31 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:35 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:35 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:35 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:35 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:35 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:35 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:35 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:35 - 
    insert 
    into
        users
        (birthday, email, gender, name, password, role) 
    values
        (?, ?, ?, ?, ?, ?)
[TRACE] 2025-02-27 23:51:35 - binding parameter (1:TIMESTAMP) <- [1998-10-27 07:00:00.0]
[TRACE] 2025-02-27 23:51:35 - binding parameter (2:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:35 - binding parameter (3:VARCHAR) <- [MALE]
[TRACE] 2025-02-27 23:51:35 - binding parameter (4:VARCHAR) <- [thongd]
[TRACE] 2025-02-27 23:51:35 - binding parameter (5:VARCHAR) <- [$2a$10$LoMt5TMCyTIed4lMPLo8p.eUctRL9MbSlp7Te8MHPQRFA7NSQTQmm]
[TRACE] 2025-02-27 23:51:35 - binding parameter (6:VARCHAR) <- [ADMIN]
[INFO] 2025-02-27 23:51:35 - New user register at 2025-02-27T23:51:35.200370300: 
{"name":"thongd","email":"thongd4@gmail.com","password":"xzcuOTMZf+H9n0XTnMegaA==","birthday":909446400000,"gender":"MALE","role":"ADMIN"}
	Register successfully
[DEBUG] 2025-02-27 23:51:35 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:35 - Writing [com.example.Job.models.ResultObject@899dea5]
[DEBUG] 2025-02-27 23:51:35 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:43 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:43 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:43 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:43 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:43 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:43 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:43 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:43 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:43 - Writing [com.example.Job.models.ResultObject@6e8cec4c]
[DEBUG] 2025-02-27 23:51:43 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:44 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:44 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:44 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:44 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:44 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:44 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:44 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:44 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:44 - Writing [com.example.Job.models.ResultObject@267c34d9]
[DEBUG] 2025-02-27 23:51:44 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:45 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:45 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:45 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:45 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:45 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:45 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:45 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:45 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:45 - Writing [com.example.Job.models.ResultObject@722dd0c7]
[DEBUG] 2025-02-27 23:51:45 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:46 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:46 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:46 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:46 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:46 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:46 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:46 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:46 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:46 - Writing [com.example.Job.models.ResultObject@39c2e8a1]
[DEBUG] 2025-02-27 23:51:46 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:47 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:47 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:47 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:47 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:47 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:47 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:47 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:47 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:47 - Writing [com.example.Job.models.ResultObject@7742872c]
[DEBUG] 2025-02-27 23:51:47 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:47 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:47 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:47 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:47 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:47 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:47 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:47 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:47 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:47 - Writing [com.example.Job.models.ResultObject@734923c6]
[DEBUG] 2025-02-27 23:51:47 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:48 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:48 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:48 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:48 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:48 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:48 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:48 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:48 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:48 - Writing [com.example.Job.models.ResultObject@1151cf3c]
[DEBUG] 2025-02-27 23:51:48 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:49 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:49 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:49 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:49 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:49 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:49 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:49 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:49 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:49 - Writing [com.example.Job.models.ResultObject@5b7e11c3]
[DEBUG] 2025-02-27 23:51:49 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:49 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:49 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:49 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:49 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:49 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:49 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:49 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:49 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:49 - Writing [com.example.Job.models.ResultObject@77e72500]
[DEBUG] 2025-02-27 23:51:49 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:50 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:50 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:50 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:50 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:50 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:50 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:50 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:50 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:50 - Writing [com.example.Job.models.ResultObject@29ef21b8]
[DEBUG] 2025-02-27 23:51:50 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:51 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:51 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:51 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:51 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:51 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:51 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:51 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:51 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:51 - Writing [com.example.Job.models.ResultObject@1b61333f]
[DEBUG] 2025-02-27 23:51:51 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:52 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:52 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:52 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:52 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:52 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:52 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:52 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:52 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:52 - Writing [com.example.Job.models.ResultObject@77ebfd45]
[DEBUG] 2025-02-27 23:51:52 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:52 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:52 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:52 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:52 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:52 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:52 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:52 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:52 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:52 - Writing [com.example.Job.models.ResultObject@a583fa6]
[DEBUG] 2025-02-27 23:51:52 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:53 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:53 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:53 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:53 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:53 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:53 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:53 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:53 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:53 - Writing [com.example.Job.models.ResultObject@a977f2a]
[DEBUG] 2025-02-27 23:51:53 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:54 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:54 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:54 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:54 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:54 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:54 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:54 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:54 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:54 - Writing [com.example.Job.models.ResultObject@4de8edd2]
[DEBUG] 2025-02-27 23:51:54 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:55 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:55 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:55 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:55 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:55 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:55 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:55 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:55 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:55 - Writing [com.example.Job.models.ResultObject@35373fad]
[DEBUG] 2025-02-27 23:51:55 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:55 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:55 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:55 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:55 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:55 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:55 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:55 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:55 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:55 - Writing [com.example.Job.models.ResultObject@29e5e9d1]
[DEBUG] 2025-02-27 23:51:55 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:56 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:56 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:56 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:56 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:56 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:56 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:56 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:56 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:56 - Writing [com.example.Job.models.ResultObject@2dd5bce1]
[DEBUG] 2025-02-27 23:51:56 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:57 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:57 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:57 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:57 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:57 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:57 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:57 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:57 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:57 - Writing [com.example.Job.models.ResultObject@27bfda01]
[DEBUG] 2025-02-27 23:51:57 - Completed 200 OK
[DEBUG] 2025-02-27 23:51:57 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:51:57 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:51:57 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:51:57 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:51:57 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:51:57 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:51:57 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:51:57 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:51:57 - Writing [com.example.Job.models.ResultObject@69deeee5]
[DEBUG] 2025-02-27 23:51:57 - Completed 200 OK
[INFO] 2025-02-27 23:52:15 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[INFO] 2025-02-27 23:52:15 - Commencing graceful shutdown. Waiting for active requests to complete
[INFO] 2025-02-27 23:52:15 - Pausing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:52:15 - Graceful shutdown complete
[INFO] 2025-02-27 23:52:15 - Stopping ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:52:15 - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:52:15 - HikariPool-6 - Shutdown initiated...
[INFO] 2025-02-27 23:52:15 - HikariPool-6 - Shutdown completed.
[INFO] 2025-02-27 23:52:15 - Starting JobApplication using Java 21.0.5 with PID 17632 (D:\2024\ivc\github\topcv-backend\target\classes started by ACER in D:\2024\ivc\github\topcv-backend)
[INFO] 2025-02-27 23:52:15 - No active profile set, falling back to 1 default profile: "default"
[INFO] 2025-02-27 23:52:15 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:52:15 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO] 2025-02-27 23:52:15 - Finished Spring Data repository scanning in 7 ms. Found 2 JPA repository interfaces.
[INFO] 2025-02-27 23:52:15 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:52:15 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-02-27 23:52:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:52:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:52:15 - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
[INFO] 2025-02-27 23:52:16 - Tomcat initialized with port 8090 (http)
[INFO] 2025-02-27 23:52:16 - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:52:16 - Starting service [Tomcat]
[INFO] 2025-02-27 23:52:16 - Starting Servlet engine: [Apache Tomcat/10.1.36]
[INFO] 2025-02-27 23:52:16 - Initializing Spring embedded WebApplicationContext
[INFO] 2025-02-27 23:52:16 - Root WebApplicationContext: initialization completed in 677 ms
[DEBUG] 2025-02-27 23:52:16 - Filter 'webMvcObservationFilter' configured for use
[INFO] 2025-02-27 23:52:16 - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO] 2025-02-27 23:52:16 - HHH000026: Second-level cache disabled
[INFO] 2025-02-27 23:52:16 - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO] 2025-02-27 23:52:16 - HikariPool-7 - Starting...
[INFO] 2025-02-27 23:52:16 - HikariPool-7 - Added connection org.postgresql.jdbc.PgConnection@323b7c97
[INFO] 2025-02-27 23:52:16 - HikariPool-7 - Start completed.
[INFO] 2025-02-27 23:52:16 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-7)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO] 2025-02-27 23:52:16 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO] 2025-02-27 23:52:16 - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:52:16 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[WARN] 2025-02-27 23:52:17 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[WARN] 2025-02-27 23:52:17 - One of the patterns in [/api/v1/auth/**, /swagger-ui/**, /v3/api-docs/**, /api/v1/test-no-auth/**, /storage/**, /api/v1/jobs/**, api/v1/companies/**, api/v1/email/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
[DEBUG] 2025-02-27 23:52:17 - 16 mappings in 'requestMappingHandlerMapping'
[DEBUG] 2025-02-27 23:52:17 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[INFO] 2025-02-27 23:52:17 - Exposing 1 endpoint beneath base path '/actuator'
[DEBUG] 2025-02-27 23:52:18 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG] 2025-02-27 23:52:18 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO] 2025-02-27 23:52:19 - LiveReload server is running on port 35729
[INFO] 2025-02-27 23:52:19 - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:52:19 - Tomcat started on port 8090 (http) with context path '/'
[INFO] 2025-02-27 23:52:19 - Started JobApplication in 4.037 seconds (process running for 329.406)
[INFO] 2025-02-27 23:52:19 - Condition evaluation unchanged
[INFO] 2025-02-27 23:52:19 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-02-27 23:52:19 - Initializing Servlet 'dispatcherServlet'
[DEBUG] 2025-02-27 23:52:19 - Detected StandardServletMultipartResolver
[DEBUG] 2025-02-27 23:52:19 - Detected AcceptHeaderLocaleResolver
[DEBUG] 2025-02-27 23:52:19 - Detected FixedThemeResolver
[DEBUG] 2025-02-27 23:52:19 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3340dafc
[DEBUG] 2025-02-27 23:52:19 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@47d3a3c7
[DEBUG] 2025-02-27 23:52:19 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO] 2025-02-27 23:52:19 - Completed initialization in 6 ms
[DEBUG] 2025-02-27 23:52:19 - GET "/swagger-ui/index.html", parameters={}
[DEBUG] 2025-02-27 23:52:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:52:19 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:19 - GET "/swagger-ui/swagger-ui.css", parameters={}
[DEBUG] 2025-02-27 23:52:19 - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
[DEBUG] 2025-02-27 23:52:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:52:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:52:19 - GET "/swagger-ui/index.css", parameters={}
[DEBUG] 2025-02-27 23:52:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:52:19 - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
[DEBUG] 2025-02-27 23:52:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:52:19 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:19 - GET "/swagger-ui/swagger-initializer.js", parameters={}
[DEBUG] 2025-02-27 23:52:19 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:19 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:19 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:52:19 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:20 - GET "/v3/api-docs/swagger-config", parameters={}
[DEBUG] 2025-02-27 23:52:20 - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
[DEBUG] 2025-02-27 23:52:20 - Using 'application/json', given [*/*] and supported [application/json]
[DEBUG] 2025-02-27 23:52:20 - Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8090/swagger-ui/oauth2-re (truncated)...]
[DEBUG] 2025-02-27 23:52:20 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:20 - GET "/v3/api-docs", parameters={}
[DEBUG] 2025-02-27 23:52:20 - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
[INFO] 2025-02-27 23:52:20 - Init duration for springdoc-openapi is: 111 ms
[DEBUG] 2025-02-27 23:52:20 - Using 'application/json', given [application/json, */*] and supported [application/json]
[DEBUG] 2025-02-27 23:52:20 - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
[DEBUG] 2025-02-27 23:52:20 - Completed 200 OK
[INFO] 2025-02-27 23:52:46 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[INFO] 2025-02-27 23:52:46 - Commencing graceful shutdown. Waiting for active requests to complete
[INFO] 2025-02-27 23:52:46 - Pausing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:52:46 - Graceful shutdown complete
[INFO] 2025-02-27 23:52:46 - Stopping ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:52:46 - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:52:46 - HikariPool-7 - Shutdown initiated...
[INFO] 2025-02-27 23:52:46 - HikariPool-7 - Shutdown completed.
[INFO] 2025-02-27 23:52:46 - Starting JobApplication using Java 21.0.5 with PID 17632 (D:\2024\ivc\github\topcv-backend\target\classes started by ACER in D:\2024\ivc\github\topcv-backend)
[INFO] 2025-02-27 23:52:46 - No active profile set, falling back to 1 default profile: "default"
[INFO] 2025-02-27 23:52:46 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:52:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO] 2025-02-27 23:52:46 - Finished Spring Data repository scanning in 9 ms. Found 2 JPA repository interfaces.
[INFO] 2025-02-27 23:52:46 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:52:46 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-02-27 23:52:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:52:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:52:46 - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
[INFO] 2025-02-27 23:52:47 - Tomcat initialized with port 8090 (http)
[INFO] 2025-02-27 23:52:47 - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:52:47 - Starting service [Tomcat]
[INFO] 2025-02-27 23:52:47 - Starting Servlet engine: [Apache Tomcat/10.1.36]
[INFO] 2025-02-27 23:52:47 - Initializing Spring embedded WebApplicationContext
[INFO] 2025-02-27 23:52:47 - Root WebApplicationContext: initialization completed in 617 ms
[DEBUG] 2025-02-27 23:52:47 - Filter 'webMvcObservationFilter' configured for use
[INFO] 2025-02-27 23:52:47 - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO] 2025-02-27 23:52:47 - HHH000026: Second-level cache disabled
[INFO] 2025-02-27 23:52:47 - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO] 2025-02-27 23:52:47 - HikariPool-8 - Starting...
[INFO] 2025-02-27 23:52:47 - HikariPool-8 - Added connection org.postgresql.jdbc.PgConnection@190cf3e0
[INFO] 2025-02-27 23:52:47 - HikariPool-8 - Start completed.
[INFO] 2025-02-27 23:52:47 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-8)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO] 2025-02-27 23:52:47 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO] 2025-02-27 23:52:47 - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:52:47 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[WARN] 2025-02-27 23:52:48 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[WARN] 2025-02-27 23:52:48 - One of the patterns in [/api/v1/auth/**, /swagger-ui/**, /v3/api-docs/**, /api/v1/test-no-auth/**, /storage/**, /api/v1/jobs/**, api/v1/companies/**, api/v1/email/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
[DEBUG] 2025-02-27 23:52:48 - 16 mappings in 'requestMappingHandlerMapping'
[DEBUG] 2025-02-27 23:52:48 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[INFO] 2025-02-27 23:52:48 - Exposing 1 endpoint beneath base path '/actuator'
[DEBUG] 2025-02-27 23:52:49 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG] 2025-02-27 23:52:49 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO] 2025-02-27 23:52:50 - LiveReload server is running on port 35729
[INFO] 2025-02-27 23:52:50 - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:52:50 - Tomcat started on port 8090 (http) with context path '/'
[INFO] 2025-02-27 23:52:50 - Started JobApplication in 3.886 seconds (process running for 360.15)
[INFO] 2025-02-27 23:52:50 - Condition evaluation unchanged
[INFO] 2025-02-27 23:52:50 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-02-27 23:52:50 - Initializing Servlet 'dispatcherServlet'
[DEBUG] 2025-02-27 23:52:50 - Detected StandardServletMultipartResolver
[DEBUG] 2025-02-27 23:52:50 - Detected AcceptHeaderLocaleResolver
[DEBUG] 2025-02-27 23:52:50 - Detected FixedThemeResolver
[DEBUG] 2025-02-27 23:52:50 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@37247da1
[DEBUG] 2025-02-27 23:52:50 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4b5a6745
[DEBUG] 2025-02-27 23:52:50 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO] 2025-02-27 23:52:50 - Completed initialization in 9 ms
[DEBUG] 2025-02-27 23:52:50 - GET "/swagger-ui/index.html", parameters={}
[DEBUG] 2025-02-27 23:52:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:52:50 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:50 - GET "/swagger-ui/swagger-ui.css", parameters={}
[DEBUG] 2025-02-27 23:52:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:52:50 - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
[DEBUG] 2025-02-27 23:52:50 - GET "/swagger-ui/swagger-initializer.js", parameters={}
[DEBUG] 2025-02-27 23:52:50 - GET "/swagger-ui/index.css", parameters={}
[DEBUG] 2025-02-27 23:52:50 - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
[DEBUG] 2025-02-27 23:52:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:52:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:52:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:52:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:52:50 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:50 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:50 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:50 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:50 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:50 - GET "/v3/api-docs/swagger-config", parameters={}
[DEBUG] 2025-02-27 23:52:50 - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
[DEBUG] 2025-02-27 23:52:50 - Using 'application/json', given [*/*] and supported [application/json]
[DEBUG] 2025-02-27 23:52:50 - Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8090/swagger-ui/oauth2-re (truncated)...]
[DEBUG] 2025-02-27 23:52:50 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:50 - GET "/v3/api-docs", parameters={}
[DEBUG] 2025-02-27 23:52:50 - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
[INFO] 2025-02-27 23:52:51 - Init duration for springdoc-openapi is: 110 ms
[DEBUG] 2025-02-27 23:52:51 - Using 'application/json', given [application/json, */*] and supported [application/json]
[DEBUG] 2025-02-27 23:52:51 - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
[DEBUG] 2025-02-27 23:52:51 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:57 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:52:57 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:52:57 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:52:57 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:52:57 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:52:57 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:52:57 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:52:57 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:52:57 - Writing [com.example.Job.models.ResultObject@5a2d8d1]
[DEBUG] 2025-02-27 23:52:57 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:58 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:52:58 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:52:58 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:52:58 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:52:58 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:52:58 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:52:58 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:52:58 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:52:58 - Writing [com.example.Job.models.ResultObject@6252d92]
[DEBUG] 2025-02-27 23:52:58 - Completed 200 OK
[DEBUG] 2025-02-27 23:52:59 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:52:59 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:52:59 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:52:59 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:52:59 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:52:59 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:52:59 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:52:59 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:52:59 - Writing [com.example.Job.models.ResultObject@6b36b272]
[DEBUG] 2025-02-27 23:52:59 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:00 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:53:00 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:53:00 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:53:00 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:53:00 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:53:00 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:53:00 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:53:00 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:53:00 - Writing [com.example.Job.models.ResultObject@522bf8fc]
[DEBUG] 2025-02-27 23:53:00 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:00 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:53:00 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:53:00 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:53:00 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:53:00 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:53:00 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:53:00 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:53:00 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:53:00 - Writing [com.example.Job.models.ResultObject@ae5a836]
[DEBUG] 2025-02-27 23:53:00 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:01 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:53:01 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:53:01 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:53:01 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:53:01 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:53:01 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:53:01 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:53:01 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:53:01 - Writing [com.example.Job.models.ResultObject@4a7cbde1]
[DEBUG] 2025-02-27 23:53:01 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:02 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:53:02 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:53:02 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[DEBUG] 2025-02-27 23:53:03 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:53:03 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:53:03 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:53:04 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: userFallback, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:53:04 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:53:04 - Writing [com.example.Job.models.ResultObject@5fa81ee0]
[DEBUG] 2025-02-27 23:53:04 - Completed 200 OK
[INFO] 2025-02-27 23:53:05 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: userFallback, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:53:05 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:53:05 - Writing [com.example.Job.models.ResultObject@539e0df8]
[DEBUG] 2025-02-27 23:53:05 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:09 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:53:09 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:53:09 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:53:09 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:53:09 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:53:09 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:53:09 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:53:09 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:53:09 - Writing [com.example.Job.models.ResultObject@6335037d]
[DEBUG] 2025-02-27 23:53:09 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:09 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:53:09 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:53:09 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:53:09 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:53:09 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:53:09 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:53:09 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:53:09 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:53:09 - Writing [com.example.Job.models.ResultObject@429e4196]
[DEBUG] 2025-02-27 23:53:09 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:10 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:53:10 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:53:10 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:53:10 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:53:10 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:53:10 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:53:10 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:53:10 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:53:10 - Writing [com.example.Job.models.ResultObject@2655e41f]
[DEBUG] 2025-02-27 23:53:10 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:11 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:53:11 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:53:11 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:53:11 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:53:11 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:53:11 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:53:11 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:53:11 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:53:11 - Writing [com.example.Job.models.ResultObject@d6d4119]
[DEBUG] 2025-02-27 23:53:11 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:12 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:53:12 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:53:12 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:53:12 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: secureRegister, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:53:12 - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[TRACE] 2025-02-27 23:53:12 - binding parameter (1:VARCHAR) <- [thongd4@gmail.com]
[TRACE] 2025-02-27 23:53:12 - binding parameter (2:INTEGER) <- [1]
[DEBUG] 2025-02-27 23:53:12 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:53:12 - Writing [com.example.Job.models.ResultObject@1d6cd4fa]
[DEBUG] 2025-02-27 23:53:12 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:13 - POST "/api/v1/auth/secure-register", parameters={}
[DEBUG] 2025-02-27 23:53:13 - Mapped to com.example.Job.controller.AuthController#secureRegister(RegisterDto)
[DEBUG] 2025-02-27 23:53:13 - Read "application/json;charset=UTF-8" to [RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oc (truncated)...]
[INFO] 2025-02-27 23:53:15 - [IP]: 0:0:0:0:0:0:0:1, [Controller]: AuthController, [Action]: userFallback, [URL]: /api/v1/auth/secure-register, [Params]: , [Body]: RegisterDto(name=thongd, email=thongd4@gmail.com, password=xzcuOTMZf+H9n0XTnMegaA==, birthday=Tue Oct 27 07:00:00 ICT 1998, gender=MALE, role=ADMIN)
[DEBUG] 2025-02-27 23:53:15 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-27 23:53:15 - Writing [com.example.Job.models.ResultObject@54a28216]
[DEBUG] 2025-02-27 23:53:15 - Completed 200 OK
[INFO] 2025-02-27 23:53:31 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[INFO] 2025-02-27 23:53:31 - Commencing graceful shutdown. Waiting for active requests to complete
[INFO] 2025-02-27 23:53:31 - Pausing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:53:31 - Graceful shutdown complete
[INFO] 2025-02-27 23:53:31 - Stopping ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:53:31 - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:53:31 - HikariPool-8 - Shutdown initiated...
[INFO] 2025-02-27 23:53:31 - HikariPool-8 - Shutdown completed.
[INFO] 2025-02-27 23:53:31 - Starting JobApplication using Java 21.0.5 with PID 17632 (D:\2024\ivc\github\topcv-backend\target\classes started by ACER in D:\2024\ivc\github\topcv-backend)
[INFO] 2025-02-27 23:53:31 - No active profile set, falling back to 1 default profile: "default"
[INFO] 2025-02-27 23:53:31 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:53:31 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO] 2025-02-27 23:53:31 - Finished Spring Data repository scanning in 12 ms. Found 2 JPA repository interfaces.
[INFO] 2025-02-27 23:53:31 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-27 23:53:31 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-02-27 23:53:31 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:53:31 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-27 23:53:32 - Finished Spring Data repository scanning in 139 ms. Found 0 Redis repository interfaces.
[INFO] 2025-02-27 23:53:32 - Tomcat initialized with port 8090 (http)
[INFO] 2025-02-27 23:53:32 - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:53:32 - Starting service [Tomcat]
[INFO] 2025-02-27 23:53:32 - Starting Servlet engine: [Apache Tomcat/10.1.36]
[INFO] 2025-02-27 23:53:32 - Initializing Spring embedded WebApplicationContext
[INFO] 2025-02-27 23:53:32 - Root WebApplicationContext: initialization completed in 1140 ms
[DEBUG] 2025-02-27 23:53:32 - Filter 'webMvcObservationFilter' configured for use
[INFO] 2025-02-27 23:53:32 - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO] 2025-02-27 23:53:32 - HHH000026: Second-level cache disabled
[INFO] 2025-02-27 23:53:32 - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO] 2025-02-27 23:53:32 - HikariPool-9 - Starting...
[INFO] 2025-02-27 23:53:32 - HikariPool-9 - Added connection org.postgresql.jdbc.PgConnection@dcb76d5
[INFO] 2025-02-27 23:53:32 - HikariPool-9 - Start completed.
[INFO] 2025-02-27 23:53:32 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-9)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO] 2025-02-27 23:53:32 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO] 2025-02-27 23:53:32 - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:53:33 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[WARN] 2025-02-27 23:53:33 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[WARN] 2025-02-27 23:53:33 - One of the patterns in [/api/v1/auth/**, /swagger-ui/**, /v3/api-docs/**, /api/v1/test-no-auth/**, /storage/**, /api/v1/jobs/**, api/v1/companies/**, api/v1/email/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
[DEBUG] 2025-02-27 23:53:33 - 16 mappings in 'requestMappingHandlerMapping'
[DEBUG] 2025-02-27 23:53:34 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[INFO] 2025-02-27 23:53:34 - Exposing 1 endpoint beneath base path '/actuator'
[DEBUG] 2025-02-27 23:53:34 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG] 2025-02-27 23:53:34 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO] 2025-02-27 23:53:35 - LiveReload server is running on port 35729
[INFO] 2025-02-27 23:53:35 - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-27 23:53:35 - Tomcat started on port 8090 (http) with context path '/'
[INFO] 2025-02-27 23:53:35 - Started JobApplication in 4.534 seconds (process running for 405.63)
[INFO] 2025-02-27 23:53:35 - Condition evaluation unchanged
[INFO] 2025-02-27 23:53:36 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-02-27 23:53:36 - Initializing Servlet 'dispatcherServlet'
[DEBUG] 2025-02-27 23:53:36 - Detected StandardServletMultipartResolver
[DEBUG] 2025-02-27 23:53:36 - Detected AcceptHeaderLocaleResolver
[DEBUG] 2025-02-27 23:53:36 - Detected FixedThemeResolver
[DEBUG] 2025-02-27 23:53:36 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1616f726
[DEBUG] 2025-02-27 23:53:36 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6e47f5f9
[DEBUG] 2025-02-27 23:53:36 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO] 2025-02-27 23:53:36 - Completed initialization in 6 ms
[DEBUG] 2025-02-27 23:53:36 - GET "/swagger-ui/index.html", parameters={}
[DEBUG] 2025-02-27 23:53:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:53:36 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:36 - GET "/swagger-ui/swagger-ui.css", parameters={}
[DEBUG] 2025-02-27 23:53:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:53:36 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:36 - GET "/swagger-ui/index.css", parameters={}
[DEBUG] 2025-02-27 23:53:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:53:36 - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
[DEBUG] 2025-02-27 23:53:36 - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
[DEBUG] 2025-02-27 23:53:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:53:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:53:36 - GET "/swagger-ui/swagger-initializer.js", parameters={}
[DEBUG] 2025-02-27 23:53:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-27 23:53:36 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:36 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:36 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:36 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:36 - GET "/v3/api-docs/swagger-config", parameters={}
[DEBUG] 2025-02-27 23:53:36 - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
[DEBUG] 2025-02-27 23:53:36 - Using 'application/json', given [*/*] and supported [application/json]
[DEBUG] 2025-02-27 23:53:36 - Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8090/swagger-ui/oauth2-re (truncated)...]
[DEBUG] 2025-02-27 23:53:36 - Completed 200 OK
[DEBUG] 2025-02-27 23:53:36 - GET "/v3/api-docs", parameters={}
[DEBUG] 2025-02-27 23:53:36 - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
[INFO] 2025-02-27 23:53:36 - Init duration for springdoc-openapi is: 126 ms
[DEBUG] 2025-02-27 23:53:36 - Using 'application/json', given [application/json, */*] and supported [application/json]
[DEBUG] 2025-02-27 23:53:36 - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
[DEBUG] 2025-02-27 23:53:36 - Completed 200 OK
[INFO] 2025-02-27 23:56:57 - Commencing graceful shutdown. Waiting for active requests to complete
[INFO] 2025-02-27 23:56:57 - Graceful shutdown complete
[INFO] 2025-02-27 23:56:57 - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-27 23:56:57 - HikariPool-9 - Shutdown initiated...
[INFO] 2025-02-27 23:56:57 - HikariPool-9 - Shutdown completed.
[INFO] 2025-02-28 00:32:44 - HV000001: Hibernate Validator 8.0.2.Final
[INFO] 2025-02-28 00:32:44 - Starting JobApplication using Java 21.0.5 with PID 1736 (D:\2024\ivc\github\topcv-backend\target\classes started by ACER in D:\2024\ivc\github\topcv-backend)
[INFO] 2025-02-28 00:32:44 - No active profile set, falling back to 1 default profile: "default"
[INFO] 2025-02-28 00:32:44 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO] 2025-02-28 00:32:44 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO] 2025-02-28 00:32:46 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-28 00:32:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO] 2025-02-28 00:32:46 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.Test.ITestChatRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
[INFO] 2025-02-28 00:32:46 - Finished Spring Data repository scanning in 120 ms. Found 2 JPA repository interfaces.
[INFO] 2025-02-28 00:32:46 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-28 00:32:46 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[INFO] 2025-02-28 00:32:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
[INFO] 2025-02-28 00:32:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
[INFO] 2025-02-28 00:32:46 - Finished Spring Data repository scanning in 11 ms. Found 1 MongoDB repository interface.
[INFO] 2025-02-28 00:32:46 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-28 00:32:46 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-02-28 00:32:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-28 00:32:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.Test.ITestChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-28 00:32:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-28 00:32:46 - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
[INFO] 2025-02-28 00:32:47 - Tomcat initialized with port 8090 (http)
[INFO] 2025-02-28 00:32:47 - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-28 00:32:47 - Starting service [Tomcat]
[INFO] 2025-02-28 00:32:47 - Starting Servlet engine: [Apache Tomcat/10.1.36]
[INFO] 2025-02-28 00:32:47 - Initializing Spring embedded WebApplicationContext
[INFO] 2025-02-28 00:32:47 - Root WebApplicationContext: initialization completed in 2395 ms
[DEBUG] 2025-02-28 00:32:47 - Filter 'webMvcObservationFilter' configured for use
[INFO] 2025-02-28 00:32:47 - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO] 2025-02-28 00:32:47 - HHH000412: Hibernate ORM core version 6.6.8.Final
[INFO] 2025-02-28 00:32:47 - HHH000026: Second-level cache disabled
[INFO] 2025-02-28 00:32:48 - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO] 2025-02-28 00:32:48 - HikariPool-1 - Starting...
[INFO] 2025-02-28 00:32:48 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@45d3f132
[INFO] 2025-02-28 00:32:48 - HikariPool-1 - Start completed.
[INFO] 2025-02-28 00:32:48 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO] 2025-02-28 00:32:49 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO] 2025-02-28 00:32:49 - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-28 00:32:49 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[INFO] 2025-02-28 00:32:50 - MongoClient with metadata {"application": {"name": "ClusterTopcv"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.5+9-LTS-239"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='atlas-sample-dataset-load-67c09b412826c72262a6526e', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@2e82cec2], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3db96838, com.mongodb.Jep395RecordCodecProvider@3a23e3ff, com.mongodb.KotlinCodecProvider@56c0f04f]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=clustertopcv.nhxhu.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-12cnzd-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@15dc3aa], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='ClusterTopcv', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
[WARN] 2025-02-28 00:32:50 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'testNoAuthController' defined in file [D:\2024\ivc\github\topcv-backend\target\classes\com\example\Job\controller\TestNoAuthController.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'testChatService' defined in file [D:\2024\ivc\github\topcv-backend\target\classes\com\example\Job\service\Test\TestChatService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'ITestChatRepository' defined in com.example.Job.repository.Test.ITestChatRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'
[INFO] 2025-02-28 00:32:50 - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-28 00:32:51 - HikariPool-1 - Shutdown initiated...
[INFO] 2025-02-28 00:32:51 - HikariPool-1 - Shutdown completed.
[INFO] 2025-02-28 00:32:51 - Stopping service [Tomcat]
[INFO] 2025-02-28 00:32:51 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 2025-02-28 00:32:51 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'testNoAuthController' defined in file [D:\2024\ivc\github\topcv-backend\target\classes\com\example\Job\controller\TestNoAuthController.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'testChatService' defined in file [D:\2024\ivc\github\topcv-backend\target\classes\com\example\Job\service\Test\TestChatService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'ITestChatRepository' defined in com.example.Job.repository.Test.ITestChatRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:346)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.example.Job.JobApplication.main(JobApplication.java:13)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'testChatService' defined in file [D:\2024\ivc\github\topcv-backend\target\classes\com\example\Job\service\Test\TestChatService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'ITestChatRepository' defined in com.example.Job.repository.Test.ITestChatRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:346)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1606)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1552)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ITestChatRepository' defined in com.example.Job.repository.Test.ITestChatRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:346)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1664)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1552)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 37 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Unsatisfied dependency expressed through method 'mongoTemplate' parameter 0: Error creating bean with name 'mongoDatabaseFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryConfiguration.class]: Failed to instantiate [org.springframework.data.mongodb.core.MongoDatabaseFactorySupport]: Factory method 'mongoDatabaseFactory' threw exception with message: Database name must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:346)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 51 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoDatabaseFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryConfiguration.class]: Failed to instantiate [org.springframework.data.mongodb.core.MongoDatabaseFactorySupport]: Factory method 'mongoDatabaseFactory' threw exception with message: Database name must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:346)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1664)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1552)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 61 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoDatabaseFactorySupport]: Factory method 'mongoDatabaseFactory' threw exception with message: Database name must not be empty
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 75 common frames omitted
Caused by: java.lang.IllegalArgumentException: Database name must not be empty
	at org.springframework.util.Assert.hasText(Assert.java:253)
	at org.springframework.data.mongodb.core.MongoDatabaseFactorySupport.<init>(MongoDatabaseFactorySupport.java:67)
	at org.springframework.data.mongodb.core.SimpleMongoClientDatabaseFactory.<init>(SimpleMongoClientDatabaseFactory.java:75)
	at org.springframework.data.mongodb.core.SimpleMongoClientDatabaseFactory.<init>(SimpleMongoClientDatabaseFactory.java:64)
	at org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryConfiguration.mongoDatabaseFactory(MongoDatabaseFactoryConfiguration.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 78 common frames omitted
[INFO] 2025-02-28 00:49:57 - HV000001: Hibernate Validator 8.0.2.Final
[INFO] 2025-02-28 00:49:57 - Starting JobApplication using Java 21.0.5 with PID 2156 (D:\2024\ivc\github\topcv-backend\target\classes started by ACER in D:\2024\ivc\github\topcv-backend)
[INFO] 2025-02-28 00:49:57 - No active profile set, falling back to 1 default profile: "default"
[INFO] 2025-02-28 00:49:57 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO] 2025-02-28 00:49:57 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO] 2025-02-28 00:49:58 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-28 00:49:58 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO] 2025-02-28 00:49:58 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.Test.ITestChatRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
[INFO] 2025-02-28 00:49:58 - Finished Spring Data repository scanning in 121 ms. Found 2 JPA repository interfaces.
[INFO] 2025-02-28 00:49:58 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-28 00:49:58 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[INFO] 2025-02-28 00:49:58 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
[INFO] 2025-02-28 00:49:58 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
[INFO] 2025-02-28 00:49:58 - Finished Spring Data repository scanning in 12 ms. Found 1 MongoDB repository interface.
[INFO] 2025-02-28 00:49:58 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-28 00:49:58 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-02-28 00:49:58 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-28 00:49:58 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.Test.ITestChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-28 00:49:58 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-28 00:49:58 - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
[INFO] 2025-02-28 00:49:59 - Tomcat initialized with port 8090 (http)
[INFO] 2025-02-28 00:49:59 - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-28 00:49:59 - Starting service [Tomcat]
[INFO] 2025-02-28 00:49:59 - Starting Servlet engine: [Apache Tomcat/10.1.36]
[INFO] 2025-02-28 00:49:59 - Initializing Spring embedded WebApplicationContext
[INFO] 2025-02-28 00:49:59 - Root WebApplicationContext: initialization completed in 2478 ms
[DEBUG] 2025-02-28 00:49:59 - Filter 'webMvcObservationFilter' configured for use
[INFO] 2025-02-28 00:50:00 - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO] 2025-02-28 00:50:00 - HHH000412: Hibernate ORM core version 6.6.8.Final
[INFO] 2025-02-28 00:50:00 - HHH000026: Second-level cache disabled
[INFO] 2025-02-28 00:50:00 - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO] 2025-02-28 00:50:00 - HikariPool-1 - Starting...
[INFO] 2025-02-28 00:50:00 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3cf92fcd
[INFO] 2025-02-28 00:50:00 - HikariPool-1 - Start completed.
[INFO] 2025-02-28 00:50:00 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO] 2025-02-28 00:50:01 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO] 2025-02-28 00:50:01 - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-28 00:50:02 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[INFO] 2025-02-28 00:50:03 - MongoClient with metadata {"application": {"name": "ClusterTopcv"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.5+9-LTS-239"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='topcv', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@7c74019e], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@308e524a, com.mongodb.Jep395RecordCodecProvider@1e9eaa7e, com.mongodb.KotlinCodecProvider@2eece436]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=clustertopcv.nhxhu.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-12cnzd-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@47bb97d9], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='ClusterTopcv', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
[INFO] 2025-02-28 00:50:03 - Adding discovered server clustertopcv-shard-00-01.nhxhu.mongodb.net:27017 to client view of cluster
[WARN] 2025-02-28 00:50:03 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'testNoAuthController' defined in file [D:\2024\ivc\github\topcv-backend\target\classes\com\example\Job\controller\TestNoAuthController.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'testChatService' defined in file [D:\2024\ivc\github\topcv-backend\target\classes\com\example\Job\service\Test\TestChatService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'ITestChatRepository' defined in com.example.Job.repository.Test.ITestChatRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'
[INFO] 2025-02-28 00:50:03 - Adding discovered server clustertopcv-shard-00-00.nhxhu.mongodb.net:27017 to client view of cluster
[INFO] 2025-02-28 00:50:03 - Adding discovered server clustertopcv-shard-00-02.nhxhu.mongodb.net:27017 to client view of cluster
[WARN] 2025-02-28 00:50:03 - Exception in monitor thread during notification of DNS resolution state change
com.mongodb.MongoInterruptedException: Interrupted waiting for lock
	at com.mongodb.internal.thread.InterruptionUtil.interruptAndCreateMongoInterruptedException(InterruptionUtil.java:41)
	at com.mongodb.internal.Locks.lockInterruptibly(Locks.java:93)
	at com.mongodb.internal.Locks.checkedWithInterruptibleLock(Locks.java:81)
	at com.mongodb.internal.Locks.withInterruptibleLock(Locks.java:76)
	at com.mongodb.internal.Locks.withInterruptibleLock(Locks.java:69)
	at com.mongodb.internal.connection.BaseCluster.withLock(BaseCluster.java:252)
	at com.mongodb.internal.connection.AbstractMultiServerCluster.withLock(AbstractMultiServerCluster.java:59)
	at com.mongodb.internal.connection.BaseCluster.updateDescription(BaseCluster.java:224)
	at com.mongodb.internal.connection.AbstractMultiServerCluster.updateDescription(AbstractMultiServerCluster.java:392)
	at com.mongodb.internal.connection.AbstractMultiServerCluster.lambda$initialize$0(AbstractMultiServerCluster.java:105)
	at com.mongodb.internal.Locks.lambda$withInterruptibleLock$1(Locks.java:70)
	at com.mongodb.internal.Locks.checkedWithInterruptibleLock(Locks.java:83)
	at com.mongodb.internal.Locks.withInterruptibleLock(Locks.java:76)
	at com.mongodb.internal.Locks.withInterruptibleLock(Locks.java:69)
	at com.mongodb.internal.connection.BaseCluster.withLock(BaseCluster.java:252)
	at com.mongodb.internal.connection.AbstractMultiServerCluster.withLock(AbstractMultiServerCluster.java:59)
	at com.mongodb.internal.connection.AbstractMultiServerCluster.initialize(AbstractMultiServerCluster.java:101)
	at com.mongodb.internal.connection.DnsMultiServerCluster$1.initialize(DnsMultiServerCluster.java:54)
	at com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor$DnsSrvRecordMonitorRunnable.run(DefaultDnsSrvRecordMonitor.java:89)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.locks.ReentrantLock$Sync.lockInterruptibly(ReentrantLock.java:159)
	at java.base/java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:372)
	at com.mongodb.internal.Locks.lockInterruptibly(Locks.java:91)
	... 18 common frames omitted
[INFO] 2025-02-28 00:50:03 - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-28 00:50:03 - HikariPool-1 - Shutdown initiated...
[INFO] 2025-02-28 00:50:03 - HikariPool-1 - Shutdown completed.
[INFO] 2025-02-28 00:50:03 - Stopping service [Tomcat]
[INFO] 2025-02-28 00:50:03 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 2025-02-28 00:50:03 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'testNoAuthController' defined in file [D:\2024\ivc\github\topcv-backend\target\classes\com\example\Job\controller\TestNoAuthController.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'testChatService' defined in file [D:\2024\ivc\github\topcv-backend\target\classes\com\example\Job\service\Test\TestChatService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'ITestChatRepository' defined in com.example.Job.repository.Test.ITestChatRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:346)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.example.Job.JobApplication.main(JobApplication.java:13)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'testChatService' defined in file [D:\2024\ivc\github\topcv-backend\target\classes\com\example\Job\service\Test\TestChatService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'ITestChatRepository' defined in com.example.Job.repository.Test.ITestChatRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:346)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1606)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1552)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ITestChatRepository' defined in com.example.Job.repository.Test.ITestChatRepository defined in @EnableMongoRepositories declared on MongoRepositoriesRegistrar.EnableMongoRepositoriesConfiguration: Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:346)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1664)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1552)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 37 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class]: Unsatisfied dependency expressed through method 'mongoTemplate' parameter 0: Error creating bean with name 'mongoDatabaseFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryConfiguration.class]: Failed to instantiate [org.springframework.data.mongodb.core.MongoDatabaseFactorySupport]: Factory method 'mongoDatabaseFactory' threw exception with message: Database name must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:346)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 51 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoDatabaseFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryConfiguration.class]: Failed to instantiate [org.springframework.data.mongodb.core.MongoDatabaseFactorySupport]: Factory method 'mongoDatabaseFactory' threw exception with message: Database name must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:346)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1664)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1552)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 61 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoDatabaseFactorySupport]: Factory method 'mongoDatabaseFactory' threw exception with message: Database name must not be empty
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 75 common frames omitted
Caused by: java.lang.IllegalArgumentException: Database name must not be empty
	at org.springframework.util.Assert.hasText(Assert.java:253)
	at org.springframework.data.mongodb.core.MongoDatabaseFactorySupport.<init>(MongoDatabaseFactorySupport.java:67)
	at org.springframework.data.mongodb.core.SimpleMongoClientDatabaseFactory.<init>(SimpleMongoClientDatabaseFactory.java:75)
	at org.springframework.data.mongodb.core.SimpleMongoClientDatabaseFactory.<init>(SimpleMongoClientDatabaseFactory.java:64)
	at org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryConfiguration.mongoDatabaseFactory(MongoDatabaseFactoryConfiguration.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 78 common frames omitted
[INFO] 2025-02-28 01:22:26 - HV000001: Hibernate Validator 8.0.2.Final
[INFO] 2025-02-28 01:22:26 - Starting JobApplication using Java 21.0.5 with PID 16892 (D:\2024\ivc\github\topcv-backend\target\classes started by ACER in D:\2024\ivc\github\topcv-backend)
[INFO] 2025-02-28 01:22:26 - No active profile set, falling back to 1 default profile: "default"
[INFO] 2025-02-28 01:22:26 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO] 2025-02-28 01:22:26 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO] 2025-02-28 01:22:27 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-28 01:22:27 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO] 2025-02-28 01:22:27 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.Test.ITestChatRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
[INFO] 2025-02-28 01:22:27 - Finished Spring Data repository scanning in 136 ms. Found 2 JPA repository interfaces.
[INFO] 2025-02-28 01:22:27 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-28 01:22:27 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[INFO] 2025-02-28 01:22:27 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
[INFO] 2025-02-28 01:22:27 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
[INFO] 2025-02-28 01:22:27 - Finished Spring Data repository scanning in 11 ms. Found 1 MongoDB repository interface.
[INFO] 2025-02-28 01:22:27 - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO] 2025-02-28 01:22:27 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[INFO] 2025-02-28 01:22:27 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.JobRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-28 01:22:27 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.Test.ITestChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-28 01:22:27 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Job.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[INFO] 2025-02-28 01:22:27 - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
[INFO] 2025-02-28 01:22:28 - Tomcat initialized with port 8090 (http)
[INFO] 2025-02-28 01:22:28 - Initializing ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-28 01:22:28 - Starting service [Tomcat]
[INFO] 2025-02-28 01:22:28 - Starting Servlet engine: [Apache Tomcat/10.1.36]
[INFO] 2025-02-28 01:22:28 - Initializing Spring embedded WebApplicationContext
[INFO] 2025-02-28 01:22:28 - Root WebApplicationContext: initialization completed in 2511 ms
[DEBUG] 2025-02-28 01:22:29 - Filter 'webMvcObservationFilter' configured for use
[INFO] 2025-02-28 01:22:29 - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO] 2025-02-28 01:22:29 - HHH000412: Hibernate ORM core version 6.6.8.Final
[INFO] 2025-02-28 01:22:29 - HHH000026: Second-level cache disabled
[INFO] 2025-02-28 01:22:29 - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO] 2025-02-28 01:22:29 - HikariPool-1 - Starting...
[INFO] 2025-02-28 01:22:29 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1e9303b5
[INFO] 2025-02-28 01:22:29 - HikariPool-1 - Start completed.
[INFO] 2025-02-28 01:22:29 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO] 2025-02-28 01:22:30 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO] 2025-02-28 01:22:30 - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-28 01:22:31 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
[INFO] 2025-02-28 01:22:31 - MongoClient with metadata {"application": {"name": "ClusterTopcv"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.5+9-LTS-239"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='topcv', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@6804f9b2], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3d83eadb, com.mongodb.Jep395RecordCodecProvider@6ce57a78, com.mongodb.KotlinCodecProvider@5660fd1c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=clustertopcv.nhxhu.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-12cnzd-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@1eb54b91], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='ClusterTopcv', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
[INFO] 2025-02-28 01:22:31 - Adding discovered server clustertopcv-shard-00-01.nhxhu.mongodb.net:27017 to client view of cluster
[INFO] 2025-02-28 01:22:31 - Adding discovered server clustertopcv-shard-00-00.nhxhu.mongodb.net:27017 to client view of cluster
[INFO] 2025-02-28 01:22:31 - Adding discovered server clustertopcv-shard-00-02.nhxhu.mongodb.net:27017 to client view of cluster
[INFO] 2025-02-28 01:22:32 - LiveReload server is running on port 35729
[WARN] 2025-02-28 01:22:32 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[WARN] 2025-02-28 01:22:32 - One of the patterns in [/api/v1/auth/**, /swagger-ui/**, /v3/api-docs/**, /api/v1/test-no-auth/**, /storage/**, /api/v1/jobs/**, api/v1/companies/**, api/v1/email/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
[DEBUG] 2025-02-28 01:22:33 - 17 mappings in 'requestMappingHandlerMapping'
[INFO] 2025-02-28 01:22:33 - Monitor thread successfully connected to server with description ServerDescription{address=clustertopcv-shard-00-01.nhxhu.mongodb.net:27017, type=REPLICA_SET_PRIMARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=780064700, minRoundTripTimeNanos=0, setName='atlas-12cnzd-shard-0', canonicalAddress=clustertopcv-shard-00-01.nhxhu.mongodb.net:27017, hosts=[clustertopcv-shard-00-02.nhxhu.mongodb.net:27017, clustertopcv-shard-00-00.nhxhu.mongodb.net:27017, clustertopcv-shard-00-01.nhxhu.mongodb.net:27017], passives=[], arbiters=[], primary='clustertopcv-shard-00-01.nhxhu.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='use1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='US_EAST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff00000000000001ed, setVersion=151, topologyVersion=TopologyVersion{processId=67be582fa9de76398115386c, counter=9}, lastWriteDate=Fri Feb 28 01:21:26 ICT 2025, lastUpdateTimeNanos=160238551814600}
[INFO] 2025-02-28 01:22:33 - Monitor thread successfully connected to server with description ServerDescription{address=clustertopcv-shard-00-00.nhxhu.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=778888400, minRoundTripTimeNanos=0, setName='atlas-12cnzd-shard-0', canonicalAddress=clustertopcv-shard-00-00.nhxhu.mongodb.net:27017, hosts=[clustertopcv-shard-00-02.nhxhu.mongodb.net:27017, clustertopcv-shard-00-00.nhxhu.mongodb.net:27017, clustertopcv-shard-00-01.nhxhu.mongodb.net:27017], passives=[], arbiters=[], primary='clustertopcv-shard-00-01.nhxhu.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='use1-az6'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='US_EAST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=151, topologyVersion=TopologyVersion{processId=67be58e2c437c3e08bbc7615, counter=5}, lastWriteDate=Fri Feb 28 01:21:26 ICT 2025, lastUpdateTimeNanos=160238551814500}
[INFO] 2025-02-28 01:22:33 - Monitor thread successfully connected to server with description ServerDescription{address=clustertopcv-shard-00-02.nhxhu.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=780062600, minRoundTripTimeNanos=0, setName='atlas-12cnzd-shard-0', canonicalAddress=clustertopcv-shard-00-02.nhxhu.mongodb.net:27017, hosts=[clustertopcv-shard-00-02.nhxhu.mongodb.net:27017, clustertopcv-shard-00-00.nhxhu.mongodb.net:27017, clustertopcv-shard-00-01.nhxhu.mongodb.net:27017], passives=[], arbiters=[], primary='clustertopcv-shard-00-01.nhxhu.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='use1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='US_EAST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=151, topologyVersion=TopologyVersion{processId=67be59f723ab4eec7c0fcd9a, counter=5}, lastWriteDate=Fri Feb 28 01:21:26 ICT 2025, lastUpdateTimeNanos=160238551814600}
[INFO] 2025-02-28 01:22:33 - Discovered replica set primary clustertopcv-shard-00-01.nhxhu.mongodb.net:27017 with max election id 7fffffff00000000000001ed and max set version 151
[DEBUG] 2025-02-28 01:22:33 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[INFO] 2025-02-28 01:22:33 - Exposing 1 endpoint beneath base path '/actuator'
[DEBUG] 2025-02-28 01:22:34 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG] 2025-02-28 01:22:34 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO] 2025-02-28 01:22:35 - Starting ProtocolHandler ["http-nio-8090"]
[INFO] 2025-02-28 01:22:35 - Tomcat started on port 8090 (http) with context path '/'
[INFO] 2025-02-28 01:22:35 - Started JobApplication in 9.706 seconds (process running for 10.071)
[INFO] 2025-02-28 01:22:36 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO] 2025-02-28 01:22:36 - Initializing Servlet 'dispatcherServlet'
[DEBUG] 2025-02-28 01:22:36 - Detected StandardServletMultipartResolver
[DEBUG] 2025-02-28 01:22:36 - Detected AcceptHeaderLocaleResolver
[DEBUG] 2025-02-28 01:22:36 - Detected FixedThemeResolver
[DEBUG] 2025-02-28 01:22:36 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6497d0af
[DEBUG] 2025-02-28 01:22:36 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@197c9b0c
[DEBUG] 2025-02-28 01:22:36 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO] 2025-02-28 01:22:36 - Completed initialization in 4 ms
[DEBUG] 2025-02-28 01:22:36 - GET "/swagger-ui/index.html", parameters={}
[DEBUG] 2025-02-28 01:22:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-28 01:22:36 - Completed 200 OK
[DEBUG] 2025-02-28 01:22:36 - GET "/swagger-ui/index.css", parameters={}
[DEBUG] 2025-02-28 01:22:36 - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
[DEBUG] 2025-02-28 01:22:36 - GET "/swagger-ui/swagger-ui.css", parameters={}
[DEBUG] 2025-02-28 01:22:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-28 01:22:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-28 01:22:36 - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
[DEBUG] 2025-02-28 01:22:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-28 01:22:36 - GET "/swagger-ui/swagger-initializer.js", parameters={}
[DEBUG] 2025-02-28 01:22:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-28 01:22:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-28 01:22:36 - Completed 200 OK
[DEBUG] 2025-02-28 01:22:36 - Completed 200 OK
[DEBUG] 2025-02-28 01:22:36 - Completed 200 OK
[DEBUG] 2025-02-28 01:22:36 - Completed 200 OK
[DEBUG] 2025-02-28 01:22:36 - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
[DEBUG] 2025-02-28 01:22:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-28 01:22:36 - Completed 200 OK
[DEBUG] 2025-02-28 01:22:36 - Completed 200 OK
[DEBUG] 2025-02-28 01:22:36 - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
[DEBUG] 2025-02-28 01:22:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-28 01:22:36 - Completed 200 OK
[DEBUG] 2025-02-28 01:22:36 - GET "/v3/api-docs/swagger-config", parameters={}
[DEBUG] 2025-02-28 01:22:36 - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
[DEBUG] 2025-02-28 01:22:36 - Using 'application/json', given [*/*] and supported [application/json]
[DEBUG] 2025-02-28 01:22:36 - Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8090/swagger-ui/oauth2-re (truncated)...]
[DEBUG] 2025-02-28 01:22:36 - Completed 200 OK
[DEBUG] 2025-02-28 01:22:36 - GET "/v3/api-docs", parameters={}
[DEBUG] 2025-02-28 01:22:36 - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
[INFO] 2025-02-28 01:22:37 - Init duration for springdoc-openapi is: 386 ms
[DEBUG] 2025-02-28 01:22:37 - Using 'application/json', given [application/json, */*] and supported [application/json]
[DEBUG] 2025-02-28 01:22:37 - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
[DEBUG] 2025-02-28 01:22:37 - Completed 200 OK
[DEBUG] 2025-02-28 01:22:38 - GET "/swagger-ui/swagger-initializer.js", parameters={}
[DEBUG] 2025-02-28 01:22:38 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
[DEBUG] 2025-02-28 01:22:38 - Completed 200 OK
[DEBUG] 2025-02-28 01:22:55 - POST "/api/v1/test-no-auth/test-create-chat", parameters={}
[DEBUG] 2025-02-28 01:22:55 - Mapped to com.example.Job.controller.TestNoAuthController#TestCreateChat()
[DEBUG] 2025-02-28 01:22:57 - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
[DEBUG] 2025-02-28 01:22:57 - Writing ["Success"]
[DEBUG] 2025-02-28 01:22:57 - Completed 200 OK
[INFO] 2025-02-28 01:23:26 - Commencing graceful shutdown. Waiting for active requests to complete
[INFO] 2025-02-28 01:23:26 - Graceful shutdown complete
[INFO] 2025-02-28 01:23:26 - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO] 2025-02-28 01:23:26 - HikariPool-1 - Shutdown initiated...
[INFO] 2025-02-28 01:23:26 - HikariPool-1 - Shutdown completed.
